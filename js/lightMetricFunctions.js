const cie = {
  wavelength: [
    360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
    375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389,
    390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
    405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
    420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
    435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
    450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
    465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
    480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
    495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
    510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
    525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
    540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
    555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
    570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
    585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
    600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
    615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
    630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
    645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
    660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
    675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
    690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
    705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
    720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
    735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
    750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
    765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
    780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
    795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
    810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824,
    825, 826, 827, 828, 829, 830,
  ],
  xbar: [
    0.0001299, 0.000145847, 0.000163802, 0.000184004, 0.00020669, 0.0002321,
    0.000260728, 0.000293075, 0.000329388, 0.000369914, 0.0004149, 0.000464159,
    0.000518986, 0.000581854, 0.000655235, 0.0007416, 0.00084503, 0.000964527,
    0.001094949, 0.001231154, 0.001368, 0.00150205, 0.001642328, 0.001802382,
    0.001995757, 0.002236, 0.002535385, 0.002892603, 0.003300829, 0.003753236,
    0.004243, 0.004762389, 0.005330048, 0.005978712, 0.006741117, 0.00765,
    0.008751373, 0.01002888, 0.0114217, 0.01286901, 0.01431, 0.01570443,
    0.01714744, 0.01878122, 0.02074801, 0.02319, 0.02620736, 0.02978248,
    0.03388092, 0.03846824, 0.04351, 0.0489956, 0.0550226, 0.0617188, 0.069212,
    0.07763, 0.08695811, 0.09717672, 0.1084063, 0.1207672, 0.13438, 0.1493582,
    0.1653957, 0.1819831, 0.198611, 0.21477, 0.2301868, 0.2448797, 0.2587773,
    0.2718079, 0.2839, 0.2949438, 0.3048965, 0.3137873, 0.3216454, 0.3285,
    0.3343513, 0.3392101, 0.3431213, 0.3461296, 0.34828, 0.3495999, 0.3501474,
    0.350013, 0.349287, 0.34806, 0.3463733, 0.3442624, 0.3418088, 0.3390941,
    0.3362, 0.3331977, 0.3300411, 0.3266357, 0.3228868, 0.3187, 0.3140251,
    0.308884, 0.3032904, 0.2972579, 0.2908, 0.2839701, 0.2767214, 0.2689178,
    0.2604227, 0.2511, 0.2408475, 0.2298512, 0.2184072, 0.2068115, 0.19536,
    0.1842136, 0.1733273, 0.1626881, 0.1522833, 0.1421, 0.1321786, 0.1225696,
    0.1132752, 0.1042979, 0.09564, 0.08729955, 0.07930804, 0.07171776,
    0.06458099, 0.05795001, 0.05186211, 0.04628152, 0.04115088, 0.03641283,
    0.03201, 0.0279172, 0.0241444, 0.020687, 0.0175404, 0.0147, 0.01216179,
    0.00991996, 0.00796724, 0.006296346, 0.0049, 0.003777173, 0.00294532,
    0.00242488, 0.002236293, 0.0024, 0.00292552, 0.00383656, 0.00517484,
    0.00698208, 0.0093, 0.01214949, 0.01553588, 0.01947752, 0.02399277, 0.0291,
    0.03481485, 0.04112016, 0.04798504, 0.05537861, 0.06327, 0.07163501,
    0.08046224, 0.08973996, 0.09945645, 0.1096, 0.1201674, 0.1311145, 0.1423679,
    0.1538542, 0.1655, 0.1772571, 0.18914, 0.2011694, 0.2133658, 0.2257499,
    0.2383209, 0.2510668, 0.2639922, 0.2771017, 0.2904, 0.3038912, 0.3175726,
    0.3314384, 0.3454828, 0.3597, 0.3740839, 0.3886396, 0.4033784, 0.4183115,
    0.4334499, 0.4487953, 0.464336, 0.480064, 0.4959713, 0.5120501, 0.5282959,
    0.5446916, 0.5612094, 0.5778215, 0.5945, 0.6112209, 0.6279758, 0.6447602,
    0.6615697, 0.6784, 0.6952392, 0.7120586, 0.7288284, 0.7455188, 0.7621,
    0.7785432, 0.7948256, 0.8109264, 0.8268248, 0.8425, 0.8579325, 0.8730816,
    0.8878944, 0.9023181, 0.9163, 0.9297995, 0.9427984, 0.9552776, 0.9672179,
    0.9786, 0.9893856, 0.9995488, 1.0090892, 1.0180064, 1.0263, 1.0339827,
    1.040986, 1.047188, 1.0524667, 1.0567, 1.0597944, 1.0617992, 1.0628068,
    1.0629096, 1.0622, 1.0607352, 1.0584436, 1.0552244, 1.0509768, 1.0456,
    1.0390369, 1.0313608, 1.0226662, 1.0130477, 1.0026, 0.9913675, 0.9793314,
    0.9664916, 0.9528479, 0.9384, 0.923194, 0.907244, 0.890502, 0.87292,
    0.8544499, 0.835084, 0.814946, 0.794186, 0.772954, 0.7514, 0.7295836,
    0.7075888, 0.6856022, 0.6638104, 0.6424, 0.6215149, 0.6011138, 0.5811052,
    0.5613977, 0.5419, 0.5225995, 0.5035464, 0.4847436, 0.4661939, 0.4479,
    0.4298613, 0.412098, 0.394644, 0.3775333, 0.3608, 0.3444563, 0.3285168,
    0.3130192, 0.2980011, 0.2835, 0.2695448, 0.2561184, 0.2431896, 0.2307272,
    0.2187, 0.2070971, 0.1959232, 0.1851708, 0.1748323, 0.1649, 0.1553667,
    0.14623, 0.13749, 0.1291467, 0.1212, 0.1136397, 0.106465, 0.09969044,
    0.09333061, 0.0874, 0.08190096, 0.07680428, 0.07207712, 0.06768664, 0.0636,
    0.05980685, 0.05628216, 0.05297104, 0.04981861, 0.04677, 0.04378405,
    0.04087536, 0.03807264, 0.03540461, 0.0329, 0.03056419, 0.02838056,
    0.02634484, 0.02445275, 0.0227, 0.02108429, 0.01959988, 0.01823732,
    0.01698717, 0.01584, 0.01479064, 0.01383132, 0.01294868, 0.0121292,
    0.01135916, 0.01062935, 0.009938846, 0.009288422, 0.008678854, 0.008110916,
    0.007582388, 0.007088746, 0.006627313, 0.006195408, 0.005790346,
    0.005409826, 0.005052583, 0.004717512, 0.004403507, 0.004109457,
    0.003833913, 0.003575748, 0.003334342, 0.003109075, 0.002899327,
    0.002704348, 0.00252302, 0.002354168, 0.002196616, 0.00204919, 0.00191096,
    0.001781438, 0.00166011, 0.001546459, 0.001439971, 0.001340042, 0.001246275,
    0.001158471, 0.00107643, 0.000999949, 0.000928736, 0.000862433, 0.00080075,
    0.000743396, 0.000690079, 0.000640516, 0.000594502, 0.000551865,
    0.000512429, 0.000476021, 0.000442454, 0.000411512, 0.000382981,
    0.000356649, 0.000332301, 0.000309759, 0.000288887, 0.000269539,
    0.000251568, 0.000234826, 0.000219171, 0.000204526, 0.000190841,
    0.000178065, 0.000166151, 0.000155024, 0.000144622, 0.00013491, 0.000125852,
    0.000117413, 0.000109552, 0.000102225, 9.54e-5, 8.9e-5, 8.31e-5, 7.75e-5,
    7.23e-5, 6.75e-5, 6.29e-5, 5.87e-5, 5.48e-5, 5.11e-5, 4.77e-5, 4.45e-5,
    4.15e-5, 3.87e-5, 3.61e-5, 3.37e-5, 3.15e-5, 2.94e-5, 2.74e-5, 2.55e-5,
    2.38e-5, 2.22e-5, 2.07e-5, 1.93e-5, 1.8e-5, 1.67e-5, 1.56e-5, 1.46e-5,
    1.36e-5, 1.27e-5, 1.18e-5, 1.1e-5, 1.03e-5, 9.56e-6, 8.91e-6, 8.31e-6,
    7.75e-6, 7.22e-6, 6.73e-6, 6.28e-6, 5.85e-6, 5.46e-6, 5.09e-6, 4.74e-6,
    4.42e-6, 4.12e-6, 3.84e-6, 3.58e-6, 3.34e-6, 3.11e-6, 2.9e-6, 2.71e-6,
    2.52e-6, 2.35e-6, 2.19e-6, 2.04e-6, 1.91e-6, 1.78e-6, 1.66e-6, 1.54e-6,
    1.44e-6, 1.34e-6, 1.25e-6,
  ],
  ybar: [
    3.92e-6, 4.39e-6, 4.93e-6, 5.53e-6, 6.21e-6, 6.97e-6, 7.81e-6, 8.77e-6,
    9.84e-6, 1.1e-5, 1.24e-5, 1.39e-5, 1.56e-5, 1.74e-5, 1.96e-5, 2.2e-5,
    2.48e-5, 2.8e-5, 3.15e-5, 3.52e-5, 3.9e-5, 4.28e-5, 4.69e-5, 5.16e-5,
    5.72e-5, 6.4e-5, 7.23e-5, 8.22e-5, 9.35e-5, 0.000106136, 0.00012,
    0.000134984, 0.000151492, 0.000170208, 0.000191816, 0.000217, 0.000246907,
    0.00028124, 0.00031852, 0.000357267, 0.000396, 0.000433715, 0.000473024,
    0.000517876, 0.000572219, 0.00064, 0.00072456, 0.0008255, 0.00094116,
    0.00106988, 0.00121, 0.001362091, 0.001530752, 0.001720368, 0.001935323,
    0.00218, 0.0024548, 0.002764, 0.0031178, 0.0035264, 0.004, 0.00454624,
    0.00515932, 0.00582928, 0.00654616, 0.0073, 0.008086507, 0.00890872,
    0.00976768, 0.01066443, 0.0116, 0.01257317, 0.01358272, 0.01462968,
    0.01571509, 0.01684, 0.01800736, 0.01921448, 0.02045392, 0.02171824, 0.023,
    0.02429461, 0.02561024, 0.02695857, 0.02835125, 0.0298, 0.03131083,
    0.03288368, 0.03452112, 0.03622571, 0.038, 0.03984667, 0.041768, 0.043766,
    0.04584267, 0.048, 0.05024368, 0.05257304, 0.05498056, 0.05745872, 0.06,
    0.06260197, 0.06527752, 0.06804208, 0.07091109, 0.0739, 0.077016, 0.0802664,
    0.0836668, 0.0872328, 0.09098, 0.09491755, 0.09904584, 0.1033674, 0.1078846,
    0.1126, 0.117532, 0.1226744, 0.1279928, 0.1334528, 0.13902, 0.1446764,
    0.1504693, 0.1564619, 0.1627177, 0.1693, 0.1762431, 0.1835581, 0.1912735,
    0.199418, 0.20802, 0.2171199, 0.2267345, 0.2368571, 0.2474812, 0.2586,
    0.2701849, 0.2822939, 0.2950505, 0.308578, 0.323, 0.3384021, 0.3546858,
    0.3716986, 0.3892875, 0.4073, 0.4256299, 0.4443096, 0.4633944, 0.4829395,
    0.503, 0.5235693, 0.544512, 0.56569, 0.5869653, 0.6082, 0.6293456,
    0.6503068, 0.6708752, 0.6908424, 0.71, 0.7281852, 0.7454636, 0.7619694,
    0.7778368, 0.7932, 0.8081104, 0.8224962, 0.8363068, 0.8494916, 0.862,
    0.8738108, 0.8849624, 0.8954936, 0.9054432, 0.9148501, 0.9237348, 0.9320924,
    0.9399226, 0.9472252, 0.954, 0.9602561, 0.9660074, 0.9712606, 0.9760225,
    0.9803, 0.9840924, 0.9874182, 0.9903128, 0.9928116, 0.9949501, 0.9967108,
    0.9980983, 0.999112, 0.9997482, 1, 0.9998567, 0.9993046, 0.9983255,
    0.9968987, 0.995, 0.9926005, 0.9897426, 0.9864444, 0.9827241, 0.9786,
    0.9740837, 0.9691712, 0.9638568, 0.9581349, 0.952, 0.9454504, 0.9384992,
    0.9311628, 0.9234576, 0.9154, 0.9070064, 0.8982772, 0.8892048, 0.8797816,
    0.87, 0.8598613, 0.849392, 0.838622, 0.8275813, 0.8163, 0.8047947, 0.793082,
    0.781192, 0.7691547, 0.757, 0.7447541, 0.7324224, 0.7200036, 0.7074965,
    0.6949, 0.6822192, 0.6694716, 0.6566744, 0.6438448, 0.631, 0.6181555,
    0.6053144, 0.5924756, 0.5796379, 0.5668, 0.5539611, 0.5411372, 0.5283528,
    0.5156323, 0.503, 0.4904688, 0.4780304, 0.4656776, 0.4534032, 0.4412,
    0.42908, 0.417036, 0.405032, 0.393032, 0.381, 0.3689184, 0.3568272,
    0.3447768, 0.3328176, 0.321, 0.3093381, 0.2978504, 0.2865936, 0.2756245,
    0.265, 0.2547632, 0.2448896, 0.2353344, 0.2260528, 0.217, 0.2081616,
    0.1995488, 0.1911552, 0.1829744, 0.175, 0.1672235, 0.1596464, 0.1522776,
    0.1451259, 0.1382, 0.1315003, 0.1250248, 0.1187792, 0.1127691, 0.107,
    0.1014762, 0.09618864, 0.09112296, 0.08626485, 0.0816, 0.07712064,
    0.07282552, 0.06871008, 0.06476976, 0.061, 0.05739621, 0.05395504,
    0.05067376, 0.04754965, 0.04458, 0.04175872, 0.03908496, 0.03656384,
    0.03420048, 0.032, 0.02996261, 0.02807664, 0.02632936, 0.02470805, 0.0232,
    0.02180077, 0.02050112, 0.01928108, 0.01812069, 0.017, 0.01590379,
    0.01483718, 0.01381068, 0.01283478, 0.01192, 0.01106831, 0.01027339,
    0.009533311, 0.008846157, 0.00821, 0.007623781, 0.007085424, 0.006591476,
    0.006138485, 0.005723, 0.005343059, 0.004995796, 0.004676404, 0.004380075,
    0.004102, 0.003838453, 0.003589099, 0.003354219, 0.003134093, 0.002929,
    0.002738139, 0.002559876, 0.002393244, 0.002237275, 0.002091, 0.001953587,
    0.00182458, 0.00170358, 0.001590187, 0.001484, 0.001384496, 0.001291268,
    0.001204092, 0.001122744, 0.001047, 0.00097659, 0.000911109, 0.000850133,
    0.000793238, 0.00074, 0.000690083, 0.00064331, 0.000599496, 0.000558455,
    0.00052, 0.000483914, 0.000450053, 0.000418345, 0.000388718, 0.0003611,
    0.000335384, 0.00031144, 0.000289166, 0.000268454, 0.0002492, 0.000231302,
    0.000214686, 0.000199288, 0.000185048, 0.0001719, 0.000159778, 0.000148604,
    0.000138302, 0.000128793, 0.00012, 0.00011186, 0.000104322, 9.73e-5,
    9.08e-5, 8.48e-5, 7.91e-5, 7.39e-5, 6.89e-5, 6.43e-5, 6.0e-5, 5.6e-5,
    5.22e-5, 4.87e-5, 4.54e-5, 4.24e-5, 3.96e-5, 3.69e-5, 3.44e-5, 3.21e-5,
    3.0e-5, 2.8e-5, 2.61e-5, 2.44e-5, 2.27e-5, 2.12e-5, 1.98e-5, 1.85e-5,
    1.72e-5, 1.61e-5, 1.5e-5, 1.4e-5, 1.31e-5, 1.22e-5, 1.14e-5, 1.06e-5,
    9.89e-6, 9.22e-6, 8.59e-6, 8.01e-6, 7.47e-6, 6.96e-6, 6.49e-6, 6.05e-6,
    5.64e-6, 5.26e-6, 4.9e-6, 4.57e-6, 4.26e-6, 3.97e-6, 3.7e-6, 3.45e-6,
    3.22e-6, 3.0e-6, 2.8e-6, 2.61e-6, 2.43e-6, 2.27e-6, 2.11e-6, 1.97e-6,
    1.84e-6, 1.71e-6, 1.6e-6, 1.49e-6, 1.39e-6, 1.29e-6, 1.21e-6, 1.12e-6,
    1.05e-6, 9.77e-7, 9.11e-7, 8.49e-7, 7.92e-7, 7.38e-7, 6.88e-7, 6.42e-7,
    5.98e-7, 5.58e-7, 5.2e-7, 4.85e-7, 4.52e-7,
  ],
  zbar: [
    0.0006061, 0.000680879, 0.000765146, 0.000860012, 0.000966593, 0.001086,
    0.001220586, 0.001372729, 0.001543579, 0.001734286, 0.001946, 0.002177777,
    0.002435809, 0.002731953, 0.003078064, 0.003486, 0.003975227, 0.00454088,
    0.00515832, 0.005802907, 0.006450001, 0.007083216, 0.007745488, 0.008501152,
    0.009414544, 0.01054999, 0.0119658, 0.01365587, 0.01558805, 0.01773015,
    0.02005001, 0.02251136, 0.02520288, 0.02827972, 0.03189704, 0.03621,
    0.04143771, 0.04750372, 0.05411988, 0.06099803, 0.06785001, 0.07448632,
    0.08136156, 0.08915364, 0.09854048, 0.1102, 0.1246133, 0.1417017, 0.1613035,
    0.1832568, 0.2074, 0.2336921, 0.2626114, 0.2947746, 0.3307985, 0.3713,
    0.4162091, 0.4654642, 0.5196948, 0.5795303, 0.6456, 0.7184838, 0.7967133,
    0.8778459, 0.959439, 1.0390501, 1.1153673, 1.1884971, 1.2581233, 1.3239296,
    1.3856, 1.4426352, 1.4948035, 1.5421903, 1.5848807, 1.62296, 1.6564048,
    1.6852959, 1.7098745, 1.7303821, 1.74706, 1.7600446, 1.7696233, 1.7762637,
    1.7804334, 1.7826, 1.7829682, 1.7816998, 1.7791982, 1.7758671, 1.77211,
    1.7682589, 1.764039, 1.7589438, 1.7524663, 1.7441, 1.7335595, 1.7208581,
    1.7059369, 1.6887372, 1.6692, 1.6475287, 1.6234127, 1.5960223, 1.564528,
    1.5281, 1.4861114, 1.4395215, 1.3898799, 1.3387362, 1.28764, 1.2374223,
    1.1878243, 1.1387611, 1.090148, 1.0419, 0.9941976, 0.9473473, 0.9014531,
    0.8566193, 0.8129501, 0.7705173, 0.7294448, 0.6899136, 0.6521049, 0.6162,
    0.5823286, 0.5504162, 0.5203376, 0.4919673, 0.46518, 0.4399246, 0.4161836,
    0.3938822, 0.3729459, 0.3533, 0.3348578, 0.3175521, 0.3013375, 0.2861686,
    0.272, 0.2588171, 0.2464838, 0.2347718, 0.2234533, 0.2123, 0.2011692,
    0.1901196, 0.1792254, 0.1685608, 0.1582, 0.1481383, 0.1383758, 0.1289942,
    0.1200751, 0.1117, 0.1039048, 0.09666748, 0.08998272, 0.08384531,
    0.07824999, 0.07320899, 0.06867816, 0.06456784, 0.06078835, 0.05725001,
    0.05390435, 0.05074664, 0.04775276, 0.04489859, 0.04216, 0.03950728,
    0.03693564, 0.03445836, 0.03208872, 0.02984, 0.02771181, 0.02569444,
    0.02378716, 0.02198925, 0.0203, 0.01871805, 0.01724036, 0.01586364,
    0.01458461, 0.0134, 0.01230723, 0.01130188, 0.01037792, 0.009529306,
    0.008749999, 0.0080352, 0.0073816, 0.0067854, 0.0062428, 0.005749999,
    0.0053036, 0.0048998, 0.0045342, 0.0042024, 0.0039, 0.0036232, 0.0033706,
    0.0031414, 0.0029348, 0.002749999, 0.0025852, 0.0024386, 0.0023094,
    0.0021968, 0.0021, 0.002017733, 0.0019482, 0.0018898, 0.001840933, 0.0018,
    0.001766267, 0.0017378, 0.0017112, 0.001683067, 0.001650001, 0.001610133,
    0.0015644, 0.0015136, 0.001458533, 0.0014, 0.001336667, 0.00127, 0.001205,
    0.001146667, 0.0011, 0.0010688, 0.0010494, 0.0010356, 0.0010212, 0.001,
    0.00096864, 0.00092992, 0.00088688, 0.00084256, 0.0008, 0.00076096,
    0.00072368, 0.00068592, 0.00064544, 0.0006, 0.000547867, 0.0004916,
    0.0004354, 0.000383467, 0.00034, 0.000307253, 0.00028316, 0.00026544,
    0.000251813, 0.00024, 0.000229547, 0.00022064, 0.00021196, 0.000202187,
    0.00019, 0.000174213, 0.00015564, 0.00013596, 0.000116853, 0.0001, 8.61e-5,
    7.46e-5, 6.5e-5, 5.69e-5, 5.0e-5, 4.42e-5, 3.95e-5, 3.57e-5, 3.26e-5,
    3.0e-5, 2.77e-5, 2.56e-5, 2.36e-5, 2.18e-5, 2.0e-5, 1.81e-5, 1.62e-5,
    1.42e-5, 1.21e-5, 1.0e-5, 7.73e-6, 5.4e-6, 3.2e-6, 1.33e-6, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0,
  ],
};

const TCS = {
  wavelength: [
    360, 365, 370, 375, 380, 385, 390, 395, 400, 405, 410, 415, 420, 425, 430,
    435, 440, 445, 450, 455, 460, 465, 470, 475, 480, 485, 490, 495, 500, 505,
    510, 515, 520, 525, 530, 535, 540, 545, 550, 555, 560, 565, 570, 575, 580,
    585, 590, 595, 600, 605, 610, 615, 620, 625, 630, 635, 640, 645, 650, 655,
    660, 665, 670, 675, 680, 685, 690, 695, 700, 705, 710, 715, 720, 725, 730,
    735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790, 795, 800, 805,
    810, 815, 820, 825, 830,
  ],
  color_standards: {
    R01: [
      116, 136, 159, 190, 219, 239, 252, 256, 256, 254, 252, 248, 244, 240, 237,
      232, 230, 226, 225, 222, 220, 218, 216, 214, 214, 214, 216, 218, 223, 225,
      226, 226, 225, 225, 227, 230, 236, 245, 253, 262, 272, 283, 298, 318, 341,
      367, 390, 409, 424, 435, 442, 448, 450, 451, 451, 451, 451, 451, 450, 450,
      451, 451, 453, 454, 455, 457, 458, 460, 462, 463, 464, 465, 466, 466, 466,
      466, 467, 467, 467, 467, 467, 467, 467, 467, 467, 467, 467, 466, 466, 466,
      466, 466, 465, 464, 464,
    ],
    R02: [
      53, 55, 59, 64, 70, 79, 89, 101, 111, 116, 118, 120, 121, 122, 122, 122,
      123, 124, 127, 128, 131, 134, 138, 143, 150, 159, 174, 190, 207, 225, 242,
      253, 260, 264, 267, 269, 272, 276, 282, 289, 299, 309, 322, 329, 335, 339,
      341, 341, 342, 342, 342, 341, 341, 339, 339, 338, 338, 337, 336, 335, 334,
      332, 332, 331, 331, 330, 329, 328, 328, 327, 326, 325, 324, 324, 324, 323,
      322, 321, 320, 318, 316, 315, 315, 314, 314, 313, 313, 312, 312, 311, 311,
      311, 311, 311, 310,
    ],
    R03: [
      58, 59, 61, 63, 65, 68, 70, 72, 73, 73, 74, 74, 74, 73, 73, 73, 73, 73,
      74, 75, 77, 80, 85, 94, 109, 126, 148, 172, 198, 221, 241, 260, 278, 302,
      339, 370, 392, 399, 400, 393, 380, 365, 349, 332, 315, 299, 285, 272, 264,
      257, 252, 247, 241, 235, 229, 224, 220, 217, 216, 216, 219, 224, 230, 238,
      251, 269, 288, 312, 340, 366, 390, 412, 431, 447, 460, 472, 481, 488, 493,
      497, 500, 502, 505, 510, 516, 520, 524, 527, 531, 535, 539, 544, 548, 552,
      555,
    ],
    R04: [
      57, 59, 62, 67, 74, 83, 93, 105, 116, 121, 124, 126, 128, 131, 135, 139,
      144, 151, 161, 172, 186, 205, 229, 254, 281, 308, 332, 352, 370, 383, 390,
      394, 395, 392, 385, 377, 367, 354, 341, 327, 312, 296, 280, 263, 247, 229,
      214, 198, 185, 175, 169, 164, 160, 156, 154, 152, 151, 149, 148, 148, 148,
      149, 151, 154, 158, 162, 165, 168, 170, 171, 170, 168, 166, 164, 164, 165,
      168, 172, 177, 181, 185, 189, 192, 194, 197, 200, 204, 210, 218, 225, 233,
      243, 254, 264, 274,
    ],
    R05: [
      143, 187, 233, 269, 295, 306, 310, 312, 313, 315, 319, 322, 326, 330, 334,
      339, 346, 352, 360, 369, 381, 394, 403, 410, 415, 418, 419, 417, 413, 409,
      403, 396, 389, 381, 372, 363, 353, 342, 331, 320, 308, 296, 284, 271, 260,
      247, 232, 220, 210, 200, 194, 189, 185, 183, 180, 177, 176, 175, 175, 175,
      175, 177, 180, 183, 186, 189, 192, 195, 199, 200, 199, 198, 196, 195, 195,
      196, 197, 200, 203, 205, 208, 212, 215, 217, 219, 222, 226, 231, 237, 243,
      249, 257, 265, 273, 280,
    ],
    R06: [
      79, 81, 89, 113, 151, 203, 265, 339, 410, 464, 492, 508, 517, 524, 531,
      538, 544, 551, 556, 556, 554, 549, 541, 531, 519, 504, 488, 469, 450, 431,
      414, 395, 377, 358, 341, 325, 309, 293, 279, 265, 253, 241, 234, 227, 225,
      222, 221, 220, 220, 220, 220, 220, 223, 227, 233, 239, 244, 251, 258, 263,
      268, 273, 278, 281, 283, 286, 291, 296, 302, 313, 325, 338, 351, 364, 376,
      389, 401, 413, 425, 436, 447, 458, 469, 477, 485, 493, 500, 506, 512, 517,
      521, 525, 529, 532, 535,
    ],
    R07: [
      150, 177, 218, 293, 378, 459, 524, 546, 551, 555, 559, 560, 561, 558, 556,
      551, 544, 535, 522, 506, 488, 469, 448, 429, 408, 385, 363, 341, 324, 311,
      301, 291, 283, 273, 265, 260, 257, 257, 259, 260, 260, 258, 256, 254, 254,
      259, 270, 284, 302, 324, 344, 362, 377, 389, 400, 410, 420, 429, 438, 445,
      452, 457, 462, 466, 468, 470, 473, 477, 483, 489, 496, 503, 511, 518, 525,
      532, 539, 546, 553, 559, 565, 570, 575, 578, 581, 583, 585, 587, 588, 589,
      590, 590, 590, 591, 592,
    ],
    R08: [
      75, 78, 84, 90, 104, 129, 170, 240, 319, 416, 462, 482, 490, 488, 482,
      473, 462, 450, 439, 426, 413, 397, 382, 366, 352, 337, 325, 310, 299, 289,
      283, 276, 270, 262, 256, 251, 250, 251, 254, 258, 264, 269, 272, 274, 278,
      284, 295, 316, 348, 384, 434, 482, 528, 568, 604, 629, 648, 663, 676, 685,
      693, 700, 705, 709, 712, 715, 717, 719, 721, 720, 719, 722, 725, 727, 729,
      730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 730, 731, 731, 731, 731,
      731, 731, 731, 731, 731,
    ],
    R09: [
      69, 72, 73, 70, 66, 62, 58, 55, 52, 52, 51, 50, 50, 49, 48, 47, 46, 44,
      42, 41, 38, 35, 33, 31, 30, 29, 28, 28, 28, 29, 30, 30, 31, 31, 32, 32,
      33, 34, 35, 37, 41, 44, 48, 52, 60, 76, 102, 136, 190, 256, 336, 418, 505,
      581, 641, 682, 717, 740, 758, 770, 781, 790, 797, 803, 809, 814, 819, 824,
      828, 830, 831, 833, 835, 836, 836, 837, 838, 839, 839, 839, 839, 839, 839,
      839, 839, 839, 839, 839, 839, 839, 838, 837, 837, 836, 836,
    ],
    R10: [
      42, 43, 45, 47, 50, 54, 59, 63, 66, 67, 68, 69, 69, 70, 72, 73, 76, 78,
      83, 88, 95, 103, 113, 125, 142, 162, 189, 219, 262, 305, 365, 416, 465,
      509, 546, 581, 610, 634, 653, 666, 678, 687, 693, 698, 701, 704, 705, 705,
      706, 707, 707, 707, 708, 708, 710, 711, 712, 714, 716, 718, 720, 722, 725,
      729, 731, 735, 739, 742, 746, 748, 749, 751, 753, 754, 755, 755, 755, 755,
      756, 757, 758, 759, 759, 759, 759, 759, 759, 759, 759, 759, 758, 757, 757,
      756, 756,
    ],
    R11: [
      74, 79, 86, 98, 111, 121, 127, 129, 127, 121, 116, 112, 108, 105, 104,
      104, 105, 106, 110, 115, 123, 134, 148, 167, 192, 219, 252, 291, 325, 347,
      356, 353, 346, 333, 314, 294, 271, 248, 227, 206, 188, 170, 153, 138, 125,
      114, 106, 100, 96, 92, 90, 87, 85, 82, 80, 79, 78, 78, 78, 78, 81, 83, 88,
      93, 102, 112, 125, 141, 161, 182, 203, 223, 242, 257, 270, 282, 292, 302,
      310, 314, 317, 323, 330, 334, 338, 343, 348, 353, 359, 365, 372, 380, 388,
      396, 403,
    ],
    R12: [
      189, 175, 158, 139, 120, 103, 90, 82, 76, 68, 64, 65, 75, 93, 123, 160,
      207, 256, 300, 331, 346, 347, 341, 328, 307, 282, 257, 230, 204, 178, 154,
      129, 109, 90, 75, 62, 51, 41, 35, 29, 25, 22, 19, 17, 17, 17, 16, 16, 16,
      16, 16, 16, 16, 16, 18, 18, 18, 18, 19, 20, 23, 24, 26, 30, 35, 43, 56,
      74, 97, 128, 166, 210, 257, 305, 354, 401, 446, 485, 520, 551, 577, 599,
      618, 633, 645, 656, 666, 674, 680, 686, 691, 694, 697, 700, 702,
    ],
    R13: [
      71, 76, 82, 90, 104, 127, 161, 211, 264, 313, 341, 352, 359, 361, 364,
      365, 367, 369, 372, 374, 376, 379, 384, 389, 397, 405, 416, 429, 443, 454,
      461, 466, 469, 471, 474, 476, 483, 490, 506, 526, 553, 582, 618, 651, 680,
      701, 717, 729, 736, 742, 745, 747, 748, 748, 748, 748, 748, 748, 748, 748,
      747, 747, 747, 747, 747, 747, 747, 746, 746, 746, 745, 744, 743, 744, 745,
      748, 750, 750, 749, 748, 748, 747, 747, 747, 747, 746, 746, 746, 746, 745,
      745, 745, 745, 745, 745,
    ],
    R14: [
      36, 36, 36, 36, 36, 36, 37, 38, 39, 39, 40, 41, 42, 42, 43, 44, 44, 45,
      45, 46, 47, 48, 50, 52, 55, 57, 62, 67, 75, 83, 92, 100, 108, 121, 133,
      142, 150, 154, 155, 152, 147, 140, 133, 125, 118, 112, 106, 101, 98, 95,
      93, 90, 89, 87, 86, 85, 84, 84, 84, 84, 85, 87, 92, 96, 102, 110, 123,
      137, 152, 169, 188, 207, 226, 243, 260, 277, 294, 310, 325, 339, 353, 366,
      379, 390, 399, 408, 416, 422, 428, 434, 439, 444, 448, 451, 454,
    ],
  },
};

const isoTempLines = {
  T: [
    100000000, 1000000, 500000, 333333.33, 250000, 200000, 166666.67, 142857.14,
    125000, 111111.11, 100000, 90909.091, 83333.333, 76923.077, 71428.571,
    66666.667, 62500, 58823.529, 55555.556, 52631.579, 50000, 47619.048,
    45454.545, 43478.261, 41666.667, 40000, 38461.538, 37037.037, 35714.286,
    34482.759, 33333.333, 32258.065, 31250, 30303.03, 29411.765, 28571.429,
    27777.778, 27027.027, 26315.789, 25641.026, 25000, 24390.244, 23809.524,
    23255.814, 22727.273, 22222.222, 21739.13, 21276.596, 20833.333, 20408.163,
    20000, 19607.843, 19230.769, 18867.925, 18518.519, 18181.818, 17857.143,
    17543.86, 17241.379, 16949.153, 16666.667, 16393.443, 16129.032, 15873.016,
    15625, 15384.615, 15151.515, 14925.373, 14705.882, 14492.754, 14285.714,
    14084.507, 13888.889, 13698.63, 13513.514, 13333.333, 13157.895, 12987.013,
    12820.513, 12658.228, 12500, 12345.679, 12195.122, 12048.193, 11904.762,
    11764.706, 11627.907, 11494.253, 11363.636, 11235.955, 11111.111, 10989.011,
    10869.565, 10752.688, 10638.298, 10526.316, 10416.667, 10309.278, 10204.082,
    10101.01, 10000, 9900.9901, 9803.9216, 9708.7379, 9615.3846, 9523.8095,
    9433.9623, 9345.7944, 9259.2593, 9174.3119, 9090.9091, 9009.009, 8928.5714,
    8849.5575, 8771.9298, 8695.6522, 8620.6897, 8547.0085, 8474.5763, 8403.3613,
    8333.3333, 8264.4628, 8196.7213, 8130.0813, 8064.5161, 8000, 7936.5079,
    7874.0157, 7812.5, 7751.938, 7692.3077, 7633.5878, 7575.7576, 7518.797,
    7462.6866, 7407.4074, 7352.9412, 7299.2701, 7246.3768, 7194.2446, 7142.8571,
    7092.1986, 7042.2535, 6993.007, 6944.4444, 6896.5517, 6849.3151, 6802.7211,
    6756.7568, 6711.4094, 6666.6667, 6622.5166, 6578.9474, 6535.9477, 6493.5065,
    6451.6129, 6410.2564, 6369.4268, 6329.1139, 6289.3082, 6250, 6211.1801,
    6172.8395, 6134.9693, 6097.561, 6060.6061, 6024.0964, 5988.024, 5952.381,
    5917.1598, 5882.3529, 5847.9532, 5813.9535, 5780.3468, 5747.1264, 5714.2857,
    5681.8182, 5649.7175, 5617.9775, 5586.5922, 5555.5556, 5524.8619, 5494.5055,
    5464.4809, 5434.7826, 5405.4054, 5376.3441, 5347.5936, 5319.1489, 5291.0053,
    5263.1579, 5235.6021, 5208.3333, 5181.3472, 5154.6392, 5128.2051, 5102.0408,
    5076.1421, 5050.5051, 5025.1256, 5000, 4975.1244, 4950.495, 4926.1084,
    4901.9608, 4878.0488, 4854.3689, 4830.9179, 4807.6923, 4784.689, 4761.9048,
    4739.3365, 4716.9811, 4694.8357, 4672.8972, 4651.1628, 4629.6296, 4608.2949,
    4587.156, 4566.21, 4545.4545, 4524.8869, 4504.5045, 4484.3049, 4464.2857,
    4444.4444, 4424.7788, 4405.2863, 4385.9649, 4366.8122, 4347.8261, 4329.0043,
    4310.3448, 4291.8455, 4273.5043, 4255.3191, 4237.2881, 4219.4093, 4201.6807,
    4184.1004, 4166.6667, 4149.3776, 4132.2314, 4115.2263, 4098.3607, 4081.6327,
    4065.0407, 4048.583, 4032.2581, 4016.0643, 4000, 3984.0637, 3968.254,
    3952.5692, 3937.0079, 3921.5686, 3906.25, 3891.0506, 3875.969, 3861.0039,
    3846.1538, 3831.4176, 3816.7939, 3802.2814, 3787.8788, 3773.5849, 3759.3985,
    3745.3184, 3731.3433, 3717.4721, 3703.7037, 3690.0369, 3676.4706, 3663.0037,
    3649.635, 3636.3636, 3623.1884, 3610.1083, 3597.1223, 3584.2294, 3571.4286,
    3558.7189, 3546.0993, 3533.5689, 3521.1268, 3508.7719, 3496.5035, 3484.3206,
    3472.2222, 3460.2076, 3448.2759, 3436.4261, 3424.6575, 3412.9693, 3401.3605,
    3389.8305, 3378.3784, 3367.0034, 3355.7047, 3344.4816, 3333.3333, 3322.2591,
    3311.2583, 3300.33, 3289.4737, 3278.6885, 3267.9739, 3257.329, 3246.7532,
    3236.246, 3225.8065, 3215.4341, 3205.1282, 3194.8882, 3184.7134, 3174.6032,
    3164.557, 3154.5741, 3144.6541, 3134.7962, 3125, 3115.2648, 3105.5901,
    3095.9752, 3086.4198, 3076.9231, 3067.4847, 3058.104, 3048.7805, 3039.5137,
    3030.303, 3021.148, 3012.0482, 3003.003, 2994.012, 2985.0746, 2976.1905,
    2967.3591, 2958.5799, 2949.8525, 2941.1765, 2932.5513, 2923.9766, 2915.4519,
    2906.9767, 2898.5507, 2890.1734, 2881.8444, 2873.5632, 2865.3295, 2857.1429,
    2849.0028, 2840.9091, 2832.8612, 2824.8588, 2816.9014, 2808.9888, 2801.1204,
    2793.2961, 2785.5153, 2777.7778, 2770.0831, 2762.4309, 2754.8209, 2747.2527,
    2739.726, 2732.2404, 2724.7956, 2717.3913, 2710.0271, 2702.7027, 2695.4178,
    2688.172, 2680.9651, 2673.7968, 2666.6667, 2659.5745, 2652.5199, 2645.5026,
    2638.5224, 2631.5789, 2624.6719, 2617.801, 2610.9661, 2604.1667, 2597.4026,
    2590.6736, 2583.9793, 2577.3196, 2570.6941, 2564.1026, 2557.5448, 2551.0204,
    2544.5293, 2538.0711, 2531.6456, 2525.2525, 2518.8917, 2512.5628, 2506.2657,
    2500, 2493.7656, 2487.5622, 2481.3896, 2475.2475, 2469.1358, 2463.0542,
    2457.0025, 2450.9804, 2444.9878, 2439.0244, 2433.09, 2427.1845, 2421.3075,
    2415.4589, 2409.6386, 2403.8462, 2398.0815, 2392.3445, 2386.6348, 2380.9524,
    2375.2969, 2369.6682, 2364.0662, 2358.4906, 2352.9412, 2347.4178, 2341.9204,
    2336.4486, 2331.0023, 2325.5814, 2320.1856, 2314.8148, 2309.4688, 2304.1475,
    2298.8506, 2293.578, 2288.3295, 2283.105, 2277.9043, 2272.7273, 2267.5737,
    2262.4434, 2257.3363, 2252.2523, 2247.191, 2242.1525, 2237.1365, 2232.1429,
    2227.1715, 2222.2222, 2217.2949, 2212.3894, 2207.5055, 2202.6432, 2197.8022,
    2192.9825, 2188.1838, 2183.4061, 2178.6492, 2173.913, 2169.1974, 2164.5022,
    2159.8272, 2155.1724, 2150.5376, 2145.9227, 2141.3276, 2136.7521, 2132.1962,
    2127.6596, 2123.1423, 2118.6441, 2114.1649, 2109.7046, 2105.2632, 2100.8403,
    2096.4361, 2092.0502, 2087.6827, 2083.3333, 2079.0021, 2074.6888, 2070.3934,
    2066.1157, 2061.8557, 2057.6132, 2053.3881, 2049.1803, 2044.9898, 2040.8163,
    2036.6599, 2032.5203, 2028.3976, 2024.2915, 2020.202, 2016.129, 2012.0724,
    2008.0321, 2004.008, 2000, 1996.008, 1992.0319, 1988.0716, 1984.127,
    1980.198, 1976.2846, 1972.3866, 1968.5039, 1964.6365, 1960.7843, 1956.9472,
    1953.125, 1949.3177, 1945.5253, 1941.7476, 1937.9845, 1934.236, 1930.5019,
    1926.7823, 1923.0769, 1919.3858, 1915.7088, 1912.0459, 1908.3969, 1904.7619,
    1901.1407, 1897.5332, 1893.9394, 1890.3592, 1886.7925, 1883.2392, 1879.6992,
    1876.1726, 1872.6592, 1869.1589, 1865.6716, 1862.1974, 1858.7361, 1855.2876,
    1851.8519, 1848.4288, 1845.0185, 1841.6206, 1838.2353, 1834.8624, 1831.5018,
    1828.1536, 1824.8175, 1821.4936, 1818.1818, 1814.882, 1811.5942, 1808.3183,
    1805.0542, 1801.8018, 1798.5612, 1795.3321, 1792.1147, 1788.9088, 1785.7143,
    1782.5312, 1779.3594, 1776.1989, 1773.0496, 1769.9115, 1766.7845, 1763.6684,
    1760.5634, 1757.4692, 1754.386, 1751.3135, 1748.2517, 1745.2007, 1742.1603,
    1739.1304, 1736.1111, 1733.1023, 1730.1038, 1727.1157, 1724.1379, 1721.1704,
    1718.2131, 1715.2659, 1712.3288, 1709.4017, 1706.4846, 1703.5775, 1700.6803,
    1697.7929, 1694.9153, 1692.0474, 1689.1892, 1686.3406, 1683.5017, 1680.6723,
    1677.8523, 1675.0419, 1672.2408, 1669.4491, 1666.6667,
  ],
  ut: [
    0.18006492, 0.18012013, 0.18017661, 0.18023382, 0.18029176, 0.18035045,
    0.18040989, 0.18047009, 0.18053105, 0.18059279, 0.1806553, 0.18071861,
    0.18078272, 0.18084763, 0.18091336, 0.18097991, 0.18104729, 0.1811155,
    0.18118456, 0.18125447, 0.18132524, 0.18139688, 0.1814694, 0.1815428,
    0.18161708, 0.18169227, 0.18176836, 0.18184537, 0.1819233, 0.18200215,
    0.18208194, 0.18216267, 0.18224435, 0.18232699, 0.18241059, 0.18249516,
    0.18258071, 0.18266725, 0.18275477, 0.18284329, 0.18293281, 0.18302335,
    0.1831149, 0.18320747, 0.18330107, 0.1833957, 0.18349138, 0.1835881,
    0.18368588, 0.18378471, 0.1838846, 0.18398557, 0.1840876, 0.18419072,
    0.18429492, 0.18440021, 0.18450659, 0.18461407, 0.18472265, 0.18483234,
    0.18494313, 0.18505505, 0.18516808, 0.18528224, 0.18539752, 0.18551394,
    0.18563148, 0.18575017, 0.18586999, 0.18599096, 0.18611308, 0.18623634,
    0.18636076, 0.18648633, 0.18661305, 0.18674094, 0.18686998, 0.18700019,
    0.18713157, 0.18726411, 0.18739782, 0.18753269, 0.18766874, 0.18780596,
    0.18794436, 0.18808393, 0.18822467, 0.18836659, 0.18850968, 0.18865395,
    0.18879939, 0.18894602, 0.18909381, 0.18924279, 0.18939294, 0.18954427,
    0.18969677, 0.18985045, 0.1900053, 0.19016132, 0.19031851, 0.19047688,
    0.19063642, 0.19079712, 0.19095899, 0.19112203, 0.19128623, 0.19145159,
    0.19161811, 0.19178579, 0.19195463, 0.19212462, 0.19229576, 0.19246806,
    0.19264149, 0.19281608, 0.1929918, 0.19316867, 0.19334667, 0.1935258,
    0.19370607, 0.19388746, 0.19406997, 0.19425361, 0.19443836, 0.19462423,
    0.19481121, 0.1949993, 0.19518849, 0.19537878, 0.19557017, 0.19576265,
    0.19595622, 0.19615088, 0.19634661, 0.19654343, 0.19674131, 0.19694027,
    0.19714029, 0.19734137, 0.1975435, 0.19774669, 0.19795093, 0.19815621,
    0.19836252, 0.19856988, 0.19877826, 0.19898766, 0.19919809, 0.19940953,
    0.19962198, 0.19983544, 0.2000499, 0.20026536, 0.20048181, 0.20069925,
    0.20091766, 0.20113706, 0.20135743, 0.20157876, 0.20180106, 0.20202432,
    0.20224852, 0.20247368, 0.20269978, 0.20292681, 0.20315478, 0.20338367,
    0.20361349, 0.20384422, 0.20407587, 0.20430842, 0.20454187, 0.20477622,
    0.20501146, 0.20524759, 0.2054846, 0.20572248, 0.20596123, 0.20620085,
    0.20644133, 0.20668267, 0.20692485, 0.20716788, 0.20741175, 0.20765645,
    0.20790198, 0.20814833, 0.20839551, 0.20864349, 0.20889229, 0.20914189,
    0.20939228, 0.20964347, 0.20989545, 0.2101482, 0.21040174, 0.21065605,
    0.21091112, 0.21116696, 0.21142355, 0.2116809, 0.21193899, 0.21219783,
    0.2124574, 0.2127177, 0.21297873, 0.21324048, 0.21350294, 0.21376612,
    0.21403, 0.21429459, 0.21455987, 0.21482584, 0.2150925, 0.21535985,
    0.21562787, 0.21589656, 0.21616591, 0.21643593, 0.21670661, 0.21697794,
    0.21724992, 0.21752254, 0.2177958, 0.21806969, 0.21834421, 0.21861935,
    0.21889512, 0.2191715, 0.21944849, 0.21972608, 0.22000427, 0.22028306,
    0.22056245, 0.22084241, 0.22112296, 0.22140409, 0.2216858, 0.22196807,
    0.2222509, 0.22253429, 0.22281824, 0.22310274, 0.22338779, 0.22367338,
    0.22395951, 0.22424617, 0.22453336, 0.22482107, 0.2251093, 0.22539805,
    0.22568732, 0.22597709, 0.22626736, 0.22655813, 0.2268494, 0.22714116,
    0.2274334, 0.22772613, 0.22801933, 0.22831301, 0.22860716, 0.22890178,
    0.22919686, 0.2294924, 0.22978839, 0.23008483, 0.23038172, 0.23067905,
    0.23097682, 0.23127502, 0.23157365, 0.23187271, 0.2321722, 0.2324721,
    0.23277242, 0.23307315, 0.23337429, 0.23367583, 0.23397777, 0.23428011,
    0.23458284, 0.23488596, 0.23518947, 0.23549336, 0.23579763, 0.23610227,
    0.23640728, 0.23671266, 0.23701841, 0.23732451, 0.23763098, 0.23793779,
    0.23824496, 0.23855247, 0.23886033, 0.23916853, 0.23947706, 0.23978593,
    0.24009512, 0.24040464, 0.24071449, 0.24102465, 0.24133514, 0.24164593,
    0.24195704, 0.24226845, 0.24258016, 0.24289218, 0.24320449, 0.24351709,
    0.24382999, 0.24414318, 0.24445664, 0.24477039, 0.24508442, 0.24539873,
    0.2457133, 0.24602815, 0.24634326, 0.24665863, 0.24697427, 0.24729016,
    0.24760631, 0.2479227, 0.24823935, 0.24855624, 0.24887337, 0.24919075,
    0.24950836, 0.2498262, 0.25014427, 0.25046258, 0.25078111, 0.25109986,
    0.25141883, 0.25173802, 0.25205742, 0.25237704, 0.25269686, 0.25301689,
    0.25333712, 0.25365756, 0.25397819, 0.25429902, 0.25462004, 0.25494125,
    0.25526265, 0.25558424, 0.25590601, 0.25622796, 0.25655008, 0.25687238,
    0.25719486, 0.2575175, 0.25784031, 0.25816329, 0.25848643, 0.25880973,
    0.25913319, 0.2594568, 0.25978057, 0.26010449, 0.26042855, 0.26075277,
    0.26107712, 0.26140162, 0.26172625, 0.26205103, 0.26237593, 0.26270097,
    0.26302614, 0.26335144, 0.26367686, 0.26400241, 0.26432808, 0.26465386,
    0.26497976, 0.26530578, 0.26563191, 0.26595815, 0.26628449, 0.26661095,
    0.2669375, 0.26726416, 0.26759092, 0.26791778, 0.26824473, 0.26857177,
    0.26889891, 0.26922613, 0.26955344, 0.26988084, 0.27020832, 0.27053588,
    0.27086353, 0.27119125, 0.27151904, 0.27184691, 0.27217485, 0.27250286,
    0.27283093, 0.27315908, 0.27348729, 0.27381555, 0.27414388, 0.27447227,
    0.27480072, 0.27512922, 0.27545777, 0.27578637, 0.27611503, 0.27644373,
    0.27677248, 0.27710127, 0.2774301, 0.27775898, 0.27808789, 0.27841684,
    0.27874582, 0.27907484, 0.2794039, 0.27973298, 0.28006209, 0.28039123,
    0.28072039, 0.28104958, 0.28137879, 0.28170802, 0.28203726, 0.28236653,
    0.28269581, 0.28302511, 0.28335442, 0.28368374, 0.28401307, 0.2843424,
    0.28467175, 0.28500109, 0.28533045, 0.2856598, 0.28598915, 0.28631851,
    0.28664786, 0.2869772, 0.28730655, 0.28763588, 0.2879652, 0.28829452,
    0.28862382, 0.28895312, 0.28928239, 0.28961166, 0.2899409, 0.29027013,
    0.29059934, 0.29092852, 0.29125769, 0.29158683, 0.29191594, 0.29224503,
    0.29257409, 0.29290312, 0.29323213, 0.2935611, 0.29389003, 0.29421894,
    0.2945478, 0.29487663, 0.29520543, 0.29553418, 0.29586289, 0.29619157,
    0.29652019, 0.29684878, 0.29717732, 0.29750581, 0.29783425, 0.29816265,
    0.29849099, 0.29881929, 0.29914753, 0.29947571, 0.29980385, 0.30013192,
    0.30045994, 0.3007879, 0.30111581, 0.30144365, 0.30177143, 0.30209914,
    0.30242679, 0.30275438, 0.3030819, 0.30340936, 0.30373674, 0.30406406,
    0.30439131, 0.30471848, 0.30504559, 0.30537261, 0.30569957, 0.30602645,
    0.30635325, 0.30667998, 0.30700662, 0.30733319, 0.30765967, 0.30798608,
    0.3083124, 0.30863864, 0.30896479, 0.30929086, 0.30961684, 0.30994274,
    0.31026855, 0.31059426, 0.31091989, 0.31124542, 0.31157087, 0.31189622,
    0.31222148, 0.31254664, 0.3128717, 0.31319667, 0.31352154, 0.31384632,
    0.31417099, 0.31449557, 0.31482004, 0.31514441, 0.31546868, 0.31579284,
    0.3161169, 0.31644086, 0.31676471, 0.31708845, 0.31741209, 0.31773561,
    0.31805903, 0.31838233, 0.31870553, 0.31902861, 0.31935158, 0.31967444,
    0.31999718, 0.32031981, 0.32064232, 0.32096472, 0.321287, 0.32160916,
    0.3219312, 0.32225312, 0.32257493, 0.32289661, 0.32321817, 0.3235396,
    0.32386092, 0.32418211, 0.32450317, 0.32482411, 0.32514492, 0.32546561,
    0.32578617, 0.3261066, 0.3264269, 0.32674707, 0.32706712, 0.32738703,
    0.32770681, 0.32802646, 0.32834597, 0.32866535, 0.3289846, 0.32930371,
    0.32962268, 0.32994152, 0.33026023, 0.33057879, 0.33089722, 0.33121551,
    0.33153366, 0.33185167, 0.33216954, 0.33248726, 0.33280485, 0.33312229,
    0.33343959, 0.33375675, 0.33407376, 0.33439063, 0.33470735, 0.33502393,
    0.33534035, 0.33565664, 0.33597277, 0.33628876, 0.33660459, 0.33692028,
    0.33723582,
  ],
  vt: [
    0.26352349, 0.26374983, 0.26398041, 0.26421295, 0.26444744, 0.26468388,
    0.26492224, 0.26516253, 0.26540473, 0.26564882, 0.2658948, 0.26614266,
    0.26639237, 0.26664393, 0.26689732, 0.26715253, 0.26740954, 0.26766834,
    0.26792892, 0.26819125, 0.26845532, 0.26872111, 0.2689886, 0.26925778,
    0.26952864, 0.26980114, 0.27007527, 0.27035102, 0.27062836, 0.27090727,
    0.27118773, 0.27146973, 0.27175323, 0.27203823, 0.27232469, 0.2726126,
    0.27290193, 0.27319267, 0.27348478, 0.27377825, 0.27407306, 0.27436917,
    0.27466657, 0.27496523, 0.27526513, 0.27556624, 0.27586854, 0.27617201,
    0.27647662, 0.27678235, 0.27708917, 0.27739705, 0.27770598, 0.27801592,
    0.27832685, 0.27863875, 0.27895159, 0.27926534, 0.27957998, 0.27989548,
    0.28021182, 0.28052898, 0.28084692, 0.28116562, 0.28148505, 0.2818052,
    0.28212603, 0.28244752, 0.28276964, 0.28309237, 0.28341568, 0.28373954,
    0.28406394, 0.28438885, 0.28471423, 0.28504007, 0.28536635, 0.28569303,
    0.28602009, 0.28634751, 0.28667526, 0.28700332, 0.28733167, 0.28766028,
    0.28798912, 0.28831818, 0.28864742, 0.28897684, 0.2893064, 0.28963608,
    0.28996585, 0.2902957, 0.29062561, 0.29095555, 0.29128549, 0.29161542,
    0.29194532, 0.29227517, 0.29260493, 0.2929346, 0.29326415, 0.29359357,
    0.29392282, 0.2942519, 0.29458078, 0.29490944, 0.29523786, 0.29556603,
    0.29589392, 0.29622152, 0.2965488, 0.29687576, 0.29720237, 0.29752862,
    0.29785448, 0.29817995, 0.29850499, 0.29882961, 0.29915378, 0.29947748,
    0.2998007, 0.30012342, 0.30044563, 0.30076732, 0.30108846, 0.30140905,
    0.30172906, 0.30204849, 0.30236733, 0.30268555, 0.30300314, 0.30332009,
    0.3036364, 0.30395204, 0.304267, 0.30458127, 0.30489484, 0.3052077,
    0.30551983, 0.30583123, 0.30614188, 0.30645178, 0.3067609, 0.30706925,
    0.30737681, 0.30768357, 0.30798952, 0.30829465, 0.30859895, 0.30890242,
    0.30920504, 0.30950681, 0.30980772, 0.31010775, 0.31040691, 0.31070518,
    0.31100255, 0.31129902, 0.31159458, 0.31188923, 0.31218295, 0.31247574,
    0.3127676, 0.31305851, 0.31334847, 0.31363747, 0.31392551, 0.31421259,
    0.31449869, 0.31478382, 0.31506796, 0.31535111, 0.31563327, 0.31591443,
    0.31619458, 0.31647373, 0.31675187, 0.31702899, 0.3173051, 0.31758017,
    0.31785422, 0.31812725, 0.31839923, 0.31867018, 0.31894009, 0.31920895,
    0.31947677, 0.31974353, 0.32000925, 0.32027391, 0.32053751, 0.32080005,
    0.32106153, 0.32132195, 0.3215813, 0.32183959, 0.3220968, 0.32235295,
    0.32260802, 0.32286202, 0.32311494, 0.32336678, 0.32361755, 0.32386724,
    0.32411586, 0.32436339, 0.32460984, 0.32485521, 0.32509949, 0.3253427,
    0.32558482, 0.32582586, 0.32606581, 0.32630468, 0.32654247, 0.32677917,
    0.32701479, 0.32724933, 0.32748279, 0.32771516, 0.32794645, 0.32817666,
    0.32840578, 0.32863383, 0.3288608, 0.32908668, 0.32931149, 0.32953522,
    0.32975788, 0.32997946, 0.33019996, 0.3304194, 0.33063776, 0.33085504,
    0.33107126, 0.33128641, 0.3315005, 0.33171351, 0.33192547, 0.33213636,
    0.33234619, 0.33255496, 0.33276267, 0.33296933, 0.33317493, 0.33337948,
    0.33358298, 0.33378543, 0.33398684, 0.3341872, 0.33438651, 0.33458479,
    0.33478203, 0.33497823, 0.3351734, 0.33536753, 0.33556063, 0.33575271,
    0.33594376, 0.33613379, 0.33632279, 0.33651078, 0.33669775, 0.33688371,
    0.33706866, 0.3372526, 0.33743553, 0.33761746, 0.33779839, 0.33797832,
    0.33815725, 0.33833519, 0.33851214, 0.3386881, 0.33886308, 0.33903707,
    0.33921009, 0.33938212, 0.33955319, 0.33972328, 0.3398924, 0.34006056,
    0.34022775, 0.34039399, 0.34055926, 0.34072359, 0.34088696, 0.34104938,
    0.34121086, 0.34137139, 0.34153099, 0.34168965, 0.34184738, 0.34200417,
    0.34216004, 0.34231498, 0.342469, 0.34262211, 0.3427743, 0.34292557,
    0.34307594, 0.3432254, 0.34337396, 0.34352162, 0.34366838, 0.34381425,
    0.34395923, 0.34410332, 0.34424652, 0.34438885, 0.3445303, 0.34467087,
    0.34481057, 0.3449494, 0.34508737, 0.34522448, 0.34536072, 0.34549612,
    0.34563066, 0.34576435, 0.34589719, 0.34602919, 0.34616036, 0.34629068,
    0.34642017, 0.34654884, 0.34667667, 0.34680369, 0.34692988, 0.34705526,
    0.34717982, 0.34730357, 0.34742651, 0.34754865, 0.34766999, 0.34779053,
    0.34791028, 0.34802924, 0.34814741, 0.34826479, 0.34838139, 0.34849722,
    0.34861226, 0.34872654, 0.34884005, 0.34895279, 0.34906477, 0.34917599,
    0.34928646, 0.34939617, 0.34950514, 0.34961335, 0.34972083, 0.34982756,
    0.34993356, 0.35003882, 0.35014336, 0.35024716, 0.35035025, 0.35045261,
    0.35055425, 0.35065518, 0.3507554, 0.35085491, 0.35095372, 0.35105182,
    0.35114923, 0.35124593, 0.35134195, 0.35143728, 0.35153192, 0.35162588,
    0.35171915, 0.35181176, 0.35190368, 0.35199494, 0.35208553, 0.35217545,
    0.35226471, 0.35235332, 0.35244126, 0.35252856, 0.3526152, 0.3527012,
    0.35278656, 0.35287128, 0.35295535, 0.3530388, 0.35312161, 0.3532038,
    0.35328536, 0.35336629, 0.35344661, 0.35352631, 0.3536054, 0.35368388,
    0.35376174, 0.35383901, 0.35391567, 0.35399174, 0.3540672, 0.35414208,
    0.35421636, 0.35429006, 0.35436317, 0.35443571, 0.35450766, 0.35457904,
    0.35464984, 0.35472007, 0.35478974, 0.35485884, 0.35492738, 0.35499536,
    0.35506279, 0.35512966, 0.35519598, 0.35526176, 0.35532699, 0.35539167,
    0.35545582, 0.35551943, 0.35558251, 0.35564505, 0.35570707, 0.35576856,
    0.35582952, 0.35588997, 0.3559499, 0.35600931, 0.35606821, 0.3561266,
    0.35618448, 0.35624186, 0.35629874, 0.35635511, 0.35641099, 0.35646638,
    0.35652127, 0.35657568, 0.35662959, 0.35668303, 0.35673598, 0.35678845,
    0.35684045, 0.35689197, 0.35694303, 0.35699361, 0.35704372, 0.35709338,
    0.35714257, 0.3571913, 0.35723957, 0.35728739, 0.35733476, 0.35738168,
    0.35742816, 0.35747419, 0.35751977, 0.35756492, 0.35760963, 0.3576539,
    0.35769775, 0.35774116, 0.35778414, 0.3578267, 0.35786883, 0.35791055,
    0.35795184, 0.35799272, 0.35803319, 0.35807324, 0.35811289, 0.35815212,
    0.35819096, 0.35822938, 0.35826741, 0.35830504, 0.35834228, 0.35837912,
    0.35841556, 0.35845162, 0.3584873, 0.35852258, 0.35855748, 0.35859201,
    0.35862615, 0.35865992, 0.35869331, 0.35872633, 0.35875898, 0.35879126,
    0.35882318, 0.35885473, 0.35888592, 0.35891675, 0.35894722, 0.35897734,
    0.3590071, 0.35903651, 0.35906557, 0.35909428, 0.35912265, 0.35915067,
    0.35917835, 0.3592057, 0.3592327, 0.35925937, 0.3592857, 0.3593117,
    0.35933738, 0.35936272, 0.35938774, 0.35941243, 0.3594368, 0.35946085,
    0.35948458, 0.35950799, 0.35953109, 0.35955388, 0.35957635, 0.35959852,
    0.35962037, 0.35964193, 0.35966317, 0.35968412, 0.35970476, 0.35972511,
    0.35974515, 0.35976491, 0.35978437, 0.35980354, 0.35982241, 0.359841,
    0.35985931, 0.35987733, 0.35989506, 0.35991251, 0.35992969, 0.35994658,
    0.3599632, 0.35997955, 0.35999562, 0.36001142, 0.36002695, 0.36004222,
    0.36005721, 0.36007194, 0.36008641, 0.36010062, 0.36011456, 0.36012825,
    0.36014168, 0.36015486, 0.36016778, 0.36018045, 0.36019286, 0.36020503,
    0.36021696, 0.36022863, 0.36024006, 0.36025125, 0.3602622, 0.3602729,
    0.36028337, 0.3602936, 0.36030359, 0.36031336, 0.36032288, 0.36033218,
    0.36034125, 0.36035008, 0.36035869, 0.36036708, 0.36037524, 0.36038318,
    0.3603909, 0.36039839, 0.36040567, 0.36041273, 0.36041958, 0.36042621,
    0.36043263, 0.36043883, 0.36044483, 0.36045062, 0.3604562, 0.36046157,
    0.36046673, 0.3604717, 0.36047646, 0.36048102, 0.36048538, 0.36048954,
    0.3604935, 0.36049727, 0.36050084, 0.36050422, 0.36050741, 0.3605104,
    0.36051321,
  ],
  tt: [
    -0.24342099, -0.24443454, -0.24548344, -0.24655767, -0.2476573, -0.2487824,
    -0.24993306, -0.25110935, -0.25231133, -0.25353909, -0.25479268,
    -0.25607218, -0.25737766, -0.25870918, -0.2600668, -0.26145058, -0.26286059,
    -0.26429688, -0.26575951, -0.26724854, -0.26876402, -0.27030601,
    -0.27187455, -0.2734697, -0.27509151, -0.27674003, -0.27841529, -0.28011736,
    -0.28184627, -0.28360206, -0.28538478, -0.28719446, -0.28903116, -0.2908949,
    -0.29278572, -0.29470367, -0.29664877, -0.29862106, -0.30062057,
    -0.30264735, -0.30470141, -0.30678279, -0.30889152, -0.31102763,
    -0.31319114, -0.3153821, -0.31760052, -0.31984643, -0.32211985, -0.32442082,
    -0.32674936, -0.32910549, -0.33148924, -0.33390063, -0.33633969,
    -0.33880643, -0.34130089, -0.34382308, -0.34637303, -0.34895076,
    -0.35155629, -0.35418965, -0.35685086, -0.35953994, -0.36225691, -0.3650018,
    -0.36777462, -0.37057541, -0.37340419, -0.37626097, -0.37914579,
    -0.38205867, -0.38499962, -0.38796869, -0.39096589, -0.39399125, -0.3970448,
    -0.40012657, -0.40323657, -0.40637485, -0.40954143, -0.41273634,
    -0.41595961, -0.41921128, -0.42249138, -0.42579994, -0.429137, -0.43250259,
    -0.43589674, -0.43931951, -0.44277092, -0.44625103, -0.44975986,
    -0.45329746, -0.45686388, -0.46045915, -0.46408334, -0.46773649,
    -0.47141864, -0.47512984, -0.47887016, -0.48263964, -0.48643833,
    -0.49026631, -0.49412362, -0.49801032, -0.50192648, -0.50587216,
    -0.50984743, -0.51385236, -0.517887, -0.52195144, -0.52604575, -0.53017,
    -0.53432427, -0.53850864, -0.54272319, -0.546968, -0.55124315, -0.55554874,
    -0.55988484, -0.56425156, -0.56864899, -0.57307722, -0.57753635,
    -0.58202647, -0.5865477, -0.59110013, -0.59568388, -0.60029905, -0.60494574,
    -0.60962409, -0.6143342, -0.61907619, -0.62385019, -0.62865631, -0.63349468,
    -0.63836543, -0.6432687, -0.64820461, -0.65317331, -0.65817493, -0.66320961,
    -0.6682775, -0.67337874, -0.67851349, -0.6836819, -0.68888412, -0.69412031,
    -0.69939063, -0.70469525, -0.71003433, -0.71540804, -0.72081655,
    -0.72626004, -0.73173869, -0.73725268, -0.74280219, -0.74838741,
    -0.75400853, -0.75966574, -0.76535924, -0.77108923, -0.77685591,
    -0.78265949, -0.78850017, -0.79437817, -0.8002937, -0.80624698, -0.81223824,
    -0.81826769, -0.82433557, -0.8304421, -0.83658753, -0.84277209, -0.84899602,
    -0.85525957, -0.86156298, -0.86790651, -0.87429042, -0.88071495,
    -0.88718038, -0.89368698, -0.900235, -0.90682473, -0.91345644, -0.92013041,
    -0.92684693, -0.93360628, -0.94040876, -0.94725467, -0.95414429,
    -0.96107794, -0.96805593, -0.97507856, -0.98214615, -0.98925902,
    -0.99641749, -1.0036219, -1.0108726, -1.0181698, -1.025514, -1.0329055,
    -1.0403446, -1.0478317, -1.0553671, -1.0629512, -1.0705844, -1.0782671,
    -1.0859995, -1.0937821, -1.1016153, -1.1094995, -1.117435, -1.1254222,
    -1.1334616, -1.1415536, -1.1496986, -1.1578969, -1.166149, -1.1744554,
    -1.1828164, -1.1912326, -1.1997043, -1.208232, -1.2168161, -1.2254571,
    -1.2341555, -1.2429117, -1.2517263, -1.2605996, -1.2695322, -1.2785245,
    -1.2875771, -1.2966905, -1.3058651, -1.3151016, -1.3244003, -1.3337618,
    -1.3431867, -1.3526755, -1.3622287, -1.3718469, -1.3815306, -1.3912805,
    -1.401097, -1.4109808, -1.4209324, -1.4309524, -1.4410415, -1.4512002,
    -1.4614291, -1.4717289, -1.4821001, -1.4925435, -1.5030596, -1.5136491,
    -1.5243126, -1.5350509, -1.5458645, -1.5567542, -1.5677206, -1.5787645,
    -1.5898865, -1.6010874, -1.6123678, -1.6237286, -1.6351703, -1.6466939,
    -1.6582999, -1.6699893, -1.6817627, -1.693621, -1.7055649, -1.7175952,
    -1.7297128, -1.7419184, -1.7542129, -1.7665972, -1.779072, -1.7916382,
    -1.8042968, -1.8170486, -1.8298944, -1.8428352, -1.8558719, -1.8690054,
    -1.8822366, -1.8955666, -1.9089962, -1.9225265, -1.9361583, -1.9498928,
    -1.9637309, -1.9776736, -1.991722, -2.0058771, -2.0201399, -2.0345116,
    -2.0489933, -2.063586, -2.0782908, -2.0931089, -2.1080415, -2.1230896,
    -2.1382545, -2.1535373, -2.1689392, -2.1844616, -2.2001055, -2.2158723,
    -2.2317632, -2.2477795, -2.2639225, -2.2801935, -2.296594, -2.3131251,
    -2.3297883, -2.346585, -2.3635166, -2.3805846, -2.3977903, -2.4151352,
    -2.4326209, -2.4502489, -2.4680206, -2.4859376, -2.5040015, -2.522214,
    -2.5405765, -2.5590908, -2.5777584, -2.5965812, -2.6155608, -2.634699,
    -2.6539974, -2.6734579, -2.6930823, -2.7128725, -2.7328302, -2.7529574,
    -2.773256, -2.793728, -2.8143753, -2.8351999, -2.8562038, -2.8773892,
    -2.8987581, -2.9203126, -2.9420549, -2.9639871, -2.9861116, -3.0084305,
    -3.0309462, -3.0536609, -3.076577, -3.099697, -3.1230232, -3.1465581,
    -3.1703043, -3.1942643, -3.2184406, -3.2428359, -3.2674529, -3.2922943,
    -3.3173629, -3.3426613, -3.3681926, -3.3939595, -3.4199651, -3.4462123,
    -3.4727041, -3.4994437, -3.5264341, -3.5536785, -3.5811803, -3.6089426,
    -3.6369689, -3.6652625, -3.6938269, -3.7226656, -3.7517823, -3.7811805,
    -3.810864, -3.8408365, -3.8711019, -3.901664, -3.9325269, -3.9636945,
    -3.9951711, -4.0269607, -4.0590677, -4.0914964, -4.1242511, -4.1573364,
    -4.1907569, -4.2245171, -4.258622, -4.2930762, -4.3278847, -4.3630525,
    -4.3985848, -4.4344866, -4.4707634, -4.5074205, -4.5444634, -4.5818977,
    -4.6197291, -4.6579635, -4.6966068, -4.735665, -4.7751444, -4.8150511,
    -4.8553916, -4.8961725, -4.9374004, -4.9790821, -5.0212246, -5.063835,
    -5.1069205, -5.1504884, -5.1945463, -5.2391019, -5.284163, -5.3297376,
    -5.3758339, -5.4224603, -5.4696252, -5.5173374, -5.5656058, -5.6144395,
    -5.6638477, -5.7138399, -5.7644258, -5.8156154, -5.8674187, -5.9198462,
    -5.9729083, -6.026616, -6.0809802, -6.1360123, -6.191724, -6.2481269,
    -6.3052334, -6.3630557, -6.4216066, -6.480899, -6.5409463, -6.6017622,
    -6.6633604, -6.7257555, -6.7889619, -6.8529947, -6.9178692, -6.9836012,
    -7.0502069, -7.1177028, -7.1861058, -7.2554334, -7.3257034, -7.3969341,
    -7.4691442, -7.5423531, -7.6165806, -7.6918468, -7.7681727, -7.8455796,
    -7.9240895, -8.0037251, -8.0845094, -8.1664663, -8.2496203, -8.3339966,
    -8.419621, -8.5065202, -8.5947216, -8.6842532, -8.7751441, -8.867424,
    -8.9611238, -9.0562749, -9.15291, -9.2510625, -9.3507671, -9.4520592,
    -9.5549756, -9.6595541, -9.7658337, -9.8738546, -9.9836584, -10.095288,
    -10.208787, -10.324202, -10.441579, -10.560968, -10.682419, -10.805983,
    -10.931715, -11.05967, -11.189905, -11.322481, -11.457458, -11.594901,
    -11.734876, -11.87745, -12.022696, -12.170686, -12.321497, -12.475208,
    -12.6319, -12.79166, -12.954575, -13.120738, -13.290244, -13.463192,
    -13.639686, -13.819833, -14.003744, -14.191537, -14.383332, -14.579256,
    -14.779441, -14.984023, -15.193147, -15.406961, -15.625623, -15.849296,
    -16.078149, -16.312362, -16.552122, -16.797624, -17.049074, -17.306685,
    -17.570684, -17.841306, -18.1188, -18.403427, -18.695461, -18.995189,
    -19.302917, -19.618962, -19.943662, -20.277373, -20.620469, -20.973347,
    -21.336426, -21.710147, -22.094981, -22.491425, -22.900005, -23.321281,
    -23.755848, -24.204337, -24.667421, -25.145818, -25.640291, -26.151657,
    -26.680789, -27.22862, -27.796151, -28.384454, -28.994681, -29.628073,
    -30.285962, -30.969788, -31.681105, -32.421591, -33.193068, -33.99751,
    -34.837063, -35.714062, -36.631057, -37.590832, -38.596437, -39.651217,
    -40.758854, -41.923404, -43.14935, -44.441659, -45.805847, -47.248061,
    -48.775167, -50.394863, -52.115806, -53.947767, -55.901815, -57.990543,
    -60.228335, -62.631702, -65.219684, -68.01436, -71.041472, -74.331225,
    -77.919292, -81.848114, -86.168583, -90.942257, -96.244308, -102.1675,
    -108.82768, -116.37139,
  ],
};

const Vlambda = {
  wavelength: [
    390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418,
    420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448,
    450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478,
    480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508,
    510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538,
    540, 542, 544, 546, 548, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568,
    570, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598,
    600, 602, 604, 606, 608, 610, 612, 614, 616, 618, 620, 622, 624, 626, 628,
    630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 650, 652, 654, 656, 658,
    660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688,
    690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718,
    720, 722, 724, 726, 728, 730,
  ],
  value: [
    0.000120024, 0.000151522, 0.000191854, 0.000246955, 0.000318583,
    0.000396078, 0.000473117, 0.000572332, 0.000724703, 0.000941346,
    0.001210239, 0.001531054, 0.001935705, 0.002455285, 0.003118416, 0.00400079,
    0.005160339, 0.006547453, 0.008088105, 0.00976961, 0.011602292, 0.013585404,
    0.015718195, 0.018010918, 0.020457961, 0.023004545, 0.0256153, 0.028356852,
    0.031317017, 0.034527941, 0.038007508, 0.041776253, 0.045851728,
    0.050253608, 0.054991424, 0.060011855, 0.065290418, 0.070925101,
    0.077031218, 0.083683332, 0.090997977, 0.09906541, 0.107905917, 0.117555223,
    0.12801809, 0.139047469, 0.150499031, 0.162749851, 0.176277924, 0.191311294,
    0.208061102, 0.2267793, 0.2475301, 0.270238286, 0.295108799, 0.323063821,
    0.354755882, 0.389364419, 0.425714, 0.463485962, 0.503099387, 0.54461959,
    0.587081278, 0.629478954, 0.671007758, 0.710140288, 0.745610895,
    0.777990492, 0.808270074, 0.836472045, 0.862170322, 0.885137259,
    0.905622106, 0.92391732, 0.940108318, 0.9541885, 0.966198272, 0.976215351,
    0.984286846, 0.990508475, 0.995146691, 0.998295513, 0.999945739,
    1.000054261, 0.998522758, 0.995196601, 0.989938162, 0.982918276,
    0.974276168, 0.964047248, 0.952188105, 0.938684637, 0.923640065,
    0.907185615, 0.889380497, 0.870171902, 0.849559831, 0.827744821,
    0.804953719, 0.781346355, 0.757149575, 0.732567119, 0.707636294,
    0.682353999, 0.656804152, 0.631124679, 0.605434003, 0.57975243, 0.554070557,
    0.528457197, 0.503099387, 0.478124854, 0.453492788, 0.429164782, 0.40511203,
    0.381075281, 0.356897705, 0.332883361, 0.309399222, 0.286650228,
    0.265052361, 0.244937987, 0.226097466, 0.20820273, 0.19119297, 0.175034578,
    0.159677944, 0.145154575, 0.131526283, 0.118802669, 0.107021142,
    0.096207646, 0.086281895, 0.077135878, 0.068723656, 0.061012053,
    0.053965701, 0.047559045, 0.041766971, 0.036571065, 0.032006323,
    0.028082188, 0.024712932, 0.021805078, 0.01928489, 0.017003359, 0.014840112,
    0.012837316, 0.011070497, 0.009535195, 0.008211622, 0.007086824,
    0.006139698, 0.005344115, 0.004677328, 0.004102811, 0.003589808,
    0.003134712, 0.00273868, 0.002393717, 0.002091413, 0.001824941, 0.001590501,
    0.00138477, 0.00120433, 0.001047207, 0.000911289, 0.000793395, 0.000690963,
    0.000599614, 0.000520103,
  ],
};

const Vprime = {
  wavelength: [
    390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418,
    420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448,
    450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478,
    480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508,
    510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538,
    540, 542, 544, 546, 548, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568,
    570, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598,
    600, 602, 604, 606, 608, 610, 612, 614, 616, 618, 620, 622, 624, 626, 628,
    630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 650, 652, 654, 656, 658,
    660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688,
    690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718,
    720, 722, 724, 726, 728, 730,
  ],
  value: [
    0.002209, 0.002939, 0.003921, 0.00524, 0.00698, 0.00929, 0.01231, 0.01619,
    0.02113, 0.0273, 0.03484, 0.0439, 0.0545, 0.0668, 0.0808, 0.0966, 0.1141,
    0.1334, 0.1541, 0.1764, 0.1998, 0.2243, 0.2496, 0.2755, 0.3017, 0.3281,
    0.3543, 0.3803, 0.406, 0.431, 0.455, 0.479, 0.502, 0.524, 0.546, 0.567,
    0.588, 0.61, 0.631, 0.653, 0.676, 0.699, 0.722, 0.745, 0.769, 0.793, 0.817,
    0.84, 0.862, 0.884, 0.904, 0.923, 0.941, 0.957, 0.97, 0.982, 0.99, 0.997, 1,
    1, 0.997, 0.99, 0.981, 0.968, 0.953, 0.935, 0.915, 0.892, 0.867, 0.84,
    0.811, 0.781, 0.749, 0.717, 0.683, 0.65, 0.616, 0.581, 0.548, 0.514, 0.481,
    0.448, 0.417, 0.3864, 0.3569, 0.3288, 0.3018, 0.2762, 0.2519, 0.2291,
    0.2076, 0.1876, 0.169, 0.1517, 0.1358, 0.1212, 0.1078, 0.0956, 0.0845,
    0.0745, 0.0655, 0.0574, 0.0502, 0.0438, 0.03816, 0.03315, 0.02874, 0.02487,
    0.02147, 0.01851, 0.01593, 0.01369, 0.01175, 0.01007, 0.00862, 0.00737,
    0.0063, 0.00538, 0.00459, 0.003913, 0.003335, 0.002842, 0.002421, 0.002062,
    0.001757, 0.001497, 0.001276, 0.001088, 0.000928, 0.000792, 0.000677,
    0.000579, 0.000496, 0.000425, 0.0003645, 0.0003129, 0.0002689, 0.0002313,
    0.0001991, 0.0001716, 0.000148, 0.0001277, 0.0001104, 0.0000954, 0.0000826,
    0.0000715, 0.000062, 0.0000538, 0.0000467, 0.0000406, 0.00003533,
    0.00003075, 0.00002679, 0.00002336, 0.00002038, 0.0000178, 0.00001556,
    0.0000136, 0.00001191, 0.00001043, 0.00000914, 0.00000802, 0.00000704,
    0.00000618, 0.00000544, 0.00000478, 0.00000421, 0.000003709, 0.00000327,
    0.000002884, 0.000002546,
  ],
};

const Scone = {
  wavelength: [
    3.9e2, 3.92e2, 3.94e2, 3.96e2, 3.98e2, 4.0e2, 4.02e2, 4.04e2, 4.06e2,
    4.08e2, 4.1e2, 4.12e2, 4.14e2, 4.16e2, 4.18e2, 4.2e2, 4.22e2, 4.24e2,
    4.26e2, 4.28e2, 4.3e2, 4.32e2, 4.34e2, 4.36e2, 4.38e2, 4.4e2, 4.42e2,
    4.44e2, 4.46e2, 4.48e2, 4.5e2, 4.52e2, 4.54e2, 4.56e2, 4.58e2, 4.6e2,
    4.62e2, 4.64e2, 4.66e2, 4.68e2, 4.7e2, 4.72e2, 4.74e2, 4.76e2, 4.78e2,
    4.8e2, 4.82e2, 4.84e2, 4.86e2, 4.88e2, 4.9e2, 4.92e2, 4.94e2, 4.96e2,
    4.98e2, 5.0e2, 5.02e2, 5.04e2, 5.06e2, 5.08e2, 5.1e2, 5.12e2, 5.14e2,
    5.16e2, 5.18e2, 5.2e2, 5.22e2, 5.24e2, 5.26e2, 5.28e2, 5.3e2, 5.32e2,
    5.34e2, 5.36e2, 5.38e2, 5.4e2, 5.42e2, 5.44e2, 5.46e2, 5.48e2, 5.5e2,
    5.52e2, 5.54e2, 5.56e2, 5.58e2, 5.6e2, 5.62e2, 5.64e2, 5.66e2, 5.68e2,
    5.7e2, 5.72e2, 5.74e2, 5.76e2, 5.78e2, 5.8e2, 5.82e2, 5.84e2, 5.86e2,
    5.88e2, 5.9e2, 5.92e2, 5.94e2, 5.96e2, 5.98e2, 6.0e2, 6.02e2, 6.04e2,
    6.06e2, 6.08e2, 6.1e2, 6.12e2, 6.14e2, 6.16e2, 6.18e2, 6.2e2, 6.22e2,
    6.24e2, 6.26e2, 6.28e2, 6.3e2, 6.32e2, 6.34e2, 6.36e2, 6.38e2, 6.4e2,
    6.42e2, 6.44e2, 6.46e2, 6.48e2, 6.5e2, 6.52e2, 6.54e2, 6.56e2, 6.58e2,
    6.6e2, 6.62e2, 6.64e2, 6.66e2, 6.68e2, 6.7e2, 6.72e2, 6.74e2, 6.76e2,
    6.78e2, 6.8e2, 6.82e2, 6.84e2, 6.86e2, 6.88e2, 6.9e2, 6.92e2, 6.94e2,
    6.96e2, 6.98e2, 7.0e2, 7.02e2, 7.04e2, 7.06e2, 7.08e2, 7.1e2, 7.12e2,
    7.14e2, 7.16e2, 7.18e2, 7.2e2, 7.22e2, 7.24e2, 7.26e2, 7.28e2, 7.3e2,
  ],
  value: [
    7.77e-3, 4.1e-2, 7.43e-2, 1.08e-1, 1.41e-1, 1.74e-1, 2.12e-1, 2.5e-1,
    2.87e-1, 3.25e-1, 3.63e-1, 4.23e-1, 4.82e-1, 5.42e-1, 6.02e-1, 6.61e-1,
    7.1e-1, 7.59e-1, 8.07e-1, 8.56e-1, 9.04e-1, 9.24e-1, 9.43e-1, 9.62e-1,
    9.81e-1, 1.0, 9.83e-1, 9.66e-1, 9.5e-1, 9.33e-1, 9.16e-1, 8.93e-1, 8.7e-1,
    8.48e-1, 8.25e-1, 8.02e-1, 7.8e-1, 7.58e-1, 7.37e-1, 7.15e-1, 6.93e-1,
    6.48e-1, 6.04e-1, 5.59e-1, 5.15e-1, 4.7e-1, 4.32e-1, 3.93e-1, 3.54e-1,
    3.16e-1, 2.77e-1, 2.55e-1, 2.32e-1, 2.1e-1, 1.87e-1, 1.65e-1, 1.51e-1,
    1.37e-1, 1.23e-1, 1.09e-1, 9.56e-2, 8.59e-2, 7.63e-2, 6.67e-2, 5.7e-2,
    4.74e-2, 4.3e-2, 3.87e-2, 3.43e-2, 3.0e-2, 2.56e-2, 2.3e-2, 2.04e-2,
    1.77e-2, 1.51e-2, 1.24e-2, 1.1e-2, 9.63e-3, 8.24e-3, 6.84e-3, 5.44e-3,
    4.82e-3, 4.2e-3, 3.57e-3, 2.95e-3, 2.33e-3, 2.18e-3, 2.02e-3, 1.86e-3,
    1.71e-3, 1.55e-3, 1.4e-3, 1.24e-3, 1.09e-3, 9.32e-4, 7.77e-4, 7.77e-4,
    7.77e-4, 7.77e-4, 7.77e-4, 7.77e-4, 7.77e-4, 7.77e-4, 7.77e-4, 7.77e-4,
    7.77e-4, 6.22e-4, 4.66e-4, 3.11e-4, 1.55e-4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
  ],
};

const Macula = {
  wavelength: [
    4.0e2, 4.05e2, 4.1e2, 4.15e2, 4.2e2, 4.25e2, 4.3e2, 4.35e2, 4.4e2, 4.45e2,
    4.5e2, 4.55e2, 4.6e2, 4.65e2, 4.7e2, 4.75e2, 4.8e2, 4.85e2, 4.9e2, 4.95e2,
    5.0e2, 5.05e2, 5.1e2, 5.15e2, 5.2e2, 5.25e2, 5.3e2, 5.35e2, 5.4e2, 5.45e2,
    5.5e2, 5.55e2, 5.6e2, 5.65e2, 5.7e2, 5.75e2, 5.8e2, 5.85e2, 5.9e2, 5.95e2,
    6.0e2, 6.05e2, 6.1e2, 6.15e2, 6.2e2, 6.25e2, 6.3e2, 6.35e2, 6.4e2, 6.45e2,
    6.5e2, 6.55e2, 6.6e2, 6.65e2, 6.7e2, 6.75e2, 6.8e2, 6.85e2, 6.9e2, 6.95e2,
    7.0e2, 7.05e2, 7.1e2, 7.15e2, 7.2e2, 7.25e2, 7.3e2,
  ],
  value: [
    2.24e-1, 2.44e-1, 2.64e-1, 2.83e-1, 3.14e-1, 3.53e-1, 3.83e-1, 4.0e-1,
    4.17e-1, 4.4e-1, 4.66e-1, 4.9e-1, 5.0e-1, 4.83e-1, 4.62e-1, 4.38e-1,
    4.37e-1, 4.36e-1, 4.27e-1, 4.04e-1, 3.51e-1, 2.83e-1, 2.14e-1, 1.55e-1,
    9.6e-2, 6.8e-2, 4.0e-2, 2.85e-2, 1.7e-2, 1.3e-2, 9.0e-3, 8.5e-3, 8.0e-3,
    6.5e-3, 5.0e-3, 4.5e-3, 4.0e-3, 2.0e-3, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
  ],
};

const Melanopsin = {
  wavelength: [
    3.8e2, 3.81e2, 3.82e2, 3.83e2, 3.84e2, 3.85e2, 3.86e2, 3.87e2, 3.88e2,
    3.89e2, 3.9e2, 3.91e2, 3.92e2, 3.93e2, 3.94e2, 3.95e2, 3.96e2, 3.97e2,
    3.98e2, 3.99e2, 4.0e2, 4.01e2, 4.02e2, 4.03e2, 4.04e2, 4.05e2, 4.06e2,
    4.07e2, 4.08e2, 4.09e2, 4.1e2, 4.11e2, 4.12e2, 4.13e2, 4.14e2, 4.15e2,
    4.16e2, 4.17e2, 4.18e2, 4.19e2, 4.2e2, 4.21e2, 4.22e2, 4.23e2, 4.24e2,
    4.25e2, 4.26e2, 4.27e2, 4.28e2, 4.29e2, 4.3e2, 4.31e2, 4.32e2, 4.33e2,
    4.34e2, 4.35e2, 4.36e2, 4.37e2, 4.38e2, 4.39e2, 4.4e2, 4.41e2, 4.42e2,
    4.43e2, 4.44e2, 4.45e2, 4.46e2, 4.47e2, 4.48e2, 4.49e2, 4.5e2, 4.51e2,
    4.52e2, 4.53e2, 4.54e2, 4.55e2, 4.56e2, 4.57e2, 4.58e2, 4.59e2, 4.6e2,
    4.61e2, 4.62e2, 4.63e2, 4.64e2, 4.65e2, 4.66e2, 4.67e2, 4.68e2, 4.69e2,
    4.7e2, 4.71e2, 4.72e2, 4.73e2, 4.74e2, 4.75e2, 4.76e2, 4.77e2, 4.78e2,
    4.79e2, 4.8e2, 4.81e2, 4.82e2, 4.83e2, 4.84e2, 4.85e2, 4.86e2, 4.87e2,
    4.88e2, 4.89e2, 4.9e2, 4.91e2, 4.92e2, 4.93e2, 4.94e2, 4.95e2, 4.96e2,
    4.97e2, 4.98e2, 4.99e2, 5.0e2, 5.01e2, 5.02e2, 5.03e2, 5.04e2, 5.05e2,
    5.06e2, 5.07e2, 5.08e2, 5.09e2, 5.1e2, 5.11e2, 5.12e2, 5.13e2, 5.14e2,
    5.15e2, 5.16e2, 5.17e2, 5.18e2, 5.19e2, 5.2e2, 5.21e2, 5.22e2, 5.23e2,
    5.24e2, 5.25e2, 5.26e2, 5.27e2, 5.28e2, 5.29e2, 5.3e2, 5.31e2, 5.32e2,
    5.33e2, 5.34e2, 5.35e2, 5.36e2, 5.37e2, 5.38e2, 5.39e2, 5.4e2, 5.41e2,
    5.42e2, 5.43e2, 5.44e2, 5.45e2, 5.46e2, 5.47e2, 5.48e2, 5.49e2, 5.5e2,
    5.51e2, 5.52e2, 5.53e2, 5.54e2, 5.55e2, 5.56e2, 5.57e2, 5.58e2, 5.59e2,
    5.6e2, 5.61e2, 5.62e2, 5.63e2, 5.64e2, 5.65e2, 5.66e2, 5.67e2, 5.68e2,
    5.69e2, 5.7e2, 5.71e2, 5.72e2, 5.73e2, 5.74e2, 5.75e2, 5.76e2, 5.77e2,
    5.78e2, 5.79e2, 5.8e2, 5.81e2, 5.82e2, 5.83e2, 5.84e2, 5.85e2, 5.86e2,
    5.87e2, 5.88e2, 5.89e2, 5.9e2, 5.91e2, 5.92e2, 5.93e2, 5.94e2, 5.95e2,
    5.96e2, 5.97e2, 5.98e2, 5.99e2, 6.0e2, 6.01e2, 6.02e2, 6.03e2, 6.04e2,
    6.05e2, 6.06e2, 6.07e2, 6.08e2, 6.09e2, 6.1e2, 6.11e2, 6.12e2, 6.13e2,
    6.14e2, 6.15e2, 6.16e2, 6.17e2, 6.18e2, 6.19e2, 6.2e2, 6.21e2, 6.22e2,
    6.23e2, 6.24e2, 6.25e2, 6.26e2, 6.27e2, 6.28e2, 6.29e2, 6.3e2, 6.31e2,
    6.32e2, 6.33e2, 6.34e2, 6.35e2, 6.36e2, 6.37e2, 6.38e2, 6.39e2, 6.4e2,
    6.41e2, 6.42e2, 6.43e2, 6.44e2, 6.45e2, 6.46e2, 6.47e2, 6.48e2, 6.49e2,
    6.5e2, 6.51e2, 6.52e2, 6.53e2, 6.54e2, 6.55e2, 6.56e2, 6.57e2, 6.58e2,
    6.59e2, 6.6e2, 6.61e2, 6.62e2, 6.63e2, 6.64e2, 6.65e2, 6.66e2, 6.67e2,
    6.68e2, 6.69e2, 6.7e2, 6.71e2, 6.72e2, 6.73e2, 6.74e2, 6.75e2, 6.76e2,
    6.77e2, 6.78e2, 6.79e2, 6.8e2, 6.81e2, 6.82e2, 6.83e2, 6.84e2, 6.85e2,
    6.86e2, 6.87e2, 6.88e2, 6.89e2, 6.9e2, 6.91e2, 6.92e2, 6.93e2, 6.94e2,
    6.95e2, 6.96e2, 6.97e2, 6.98e2, 6.99e2, 7.0e2, 7.01e2, 7.02e2, 7.03e2,
    7.04e2, 7.05e2, 7.06e2, 7.07e2, 7.08e2, 7.09e2, 7.1e2, 7.11e2, 7.12e2,
    7.13e2, 7.14e2, 7.15e2, 7.16e2, 7.17e2, 7.18e2, 7.19e2, 7.2e2, 7.21e2,
    7.22e2, 7.23e2, 7.24e2, 7.25e2, 7.26e2, 7.27e2, 7.28e2, 7.29e2, 7.3e2,
  ],
  value: [
    1.21e-3, 1.52e-3, 1.88e-3, 2.27e-3, 2.71e-3, 3.2e-3, 3.74e-3, 4.35e-3,
    4.88e-3, 5.46e-3, 6.09e-3, 7.54e-3, 9.1e-3, 1.08e-2, 1.26e-2, 1.45e-2,
    1.66e-2, 1.88e-2, 2.11e-2, 2.34e-2, 2.59e-2, 3.06e-2, 3.54e-2, 4.05e-2,
    4.59e-2, 5.15e-2, 5.73e-2, 6.33e-2, 7.01e-2, 7.71e-2, 8.44e-2, 9.44e-2,
    1.05e-1, 1.15e-1, 1.26e-1, 1.37e-1, 1.49e-1, 1.61e-1, 1.74e-1, 1.88e-1,
    2.02e-1, 2.18e-1, 2.34e-1, 2.5e-1, 2.66e-1, 2.83e-1, 3.0e-1, 3.17e-1,
    3.35e-1, 3.54e-1, 3.72e-1, 3.88e-1, 4.04e-1, 4.2e-1, 4.36e-1, 4.52e-1,
    4.68e-1, 4.85e-1, 5.02e-1, 5.2e-1, 5.38e-1, 5.51e-1, 5.64e-1, 5.77e-1,
    5.91e-1, 6.05e-1, 6.19e-1, 6.33e-1, 6.47e-1, 6.62e-1, 6.76e-1, 6.89e-1,
    7.01e-1, 7.14e-1, 7.27e-1, 7.41e-1, 7.54e-1, 7.67e-1, 7.82e-1, 7.96e-1,
    8.1e-1, 8.22e-1, 8.34e-1, 8.45e-1, 8.57e-1, 8.69e-1, 8.8e-1, 8.91e-1,
    9.01e-1, 9.11e-1, 9.21e-1, 9.31e-1, 9.41e-1, 9.49e-1, 9.57e-1, 9.65e-1,
    9.72e-1, 9.79e-1, 9.84e-1, 9.89e-1, 9.94e-1, 9.97e-1, 9.99e-1, 1.0, 1.0,
    1.0, 9.99e-1, 9.97e-1, 9.95e-1, 9.92e-1, 9.89e-1, 9.85e-1, 9.81e-1, 9.75e-1,
    9.69e-1, 9.62e-1, 9.54e-1, 9.46e-1, 9.37e-1, 9.28e-1, 9.17e-1, 9.06e-1,
    8.95e-1, 8.83e-1, 8.71e-1, 8.58e-1, 8.44e-1, 8.3e-1, 8.16e-1, 8.01e-1,
    7.86e-1, 7.69e-1, 7.53e-1, 7.36e-1, 7.19e-1, 7.01e-1, 6.84e-1, 6.67e-1,
    6.5e-1, 6.32e-1, 6.14e-1, 5.97e-1, 5.8e-1, 5.63e-1, 5.45e-1, 5.28e-1,
    5.11e-1, 4.94e-1, 4.77e-1, 4.6e-1, 4.44e-1, 4.28e-1, 4.12e-1, 3.97e-1,
    3.81e-1, 3.66e-1, 3.52e-1, 3.38e-1, 3.24e-1, 3.1e-1, 2.97e-1, 2.84e-1,
    2.71e-1, 2.59e-1, 2.47e-1, 2.35e-1, 2.24e-1, 2.13e-1, 2.03e-1, 1.93e-1,
    1.83e-1, 1.74e-1, 1.64e-1, 1.56e-1, 1.47e-1, 1.39e-1, 1.32e-1, 1.24e-1,
    1.17e-1, 1.11e-1, 1.04e-1, 9.82e-2, 9.24e-2, 8.69e-2, 8.16e-2, 7.66e-2,
    7.19e-2, 6.74e-2, 6.32e-2, 5.92e-2, 5.54e-2, 5.18e-2, 4.84e-2, 4.53e-2,
    4.23e-2, 3.95e-2, 3.68e-2, 3.44e-2, 3.2e-2, 2.98e-2, 2.78e-2, 2.59e-2,
    2.41e-2, 2.24e-2, 2.08e-2, 1.93e-2, 1.79e-2, 1.66e-2, 1.54e-2, 1.43e-2,
    1.33e-2, 1.23e-2, 1.14e-2, 1.05e-2, 9.76e-3, 9.03e-3, 8.35e-3, 7.72e-3,
    7.15e-3, 6.61e-3, 6.11e-3, 5.65e-3, 5.22e-3, 4.83e-3, 4.46e-3, 4.12e-3,
    3.8e-3, 3.51e-3, 3.25e-3, 3.0e-3, 2.77e-3, 2.56e-3, 2.36e-3, 2.18e-3,
    2.01e-3, 1.86e-3, 1.72e-3, 1.58e-3, 1.46e-3, 1.35e-3, 1.25e-3, 1.16e-3,
    1.07e-3, 9.86e-4, 9.12e-4, 8.43e-4, 7.79e-4, 7.21e-4, 6.67e-4, 6.17e-4,
    5.71e-4, 5.29e-4, 4.9e-4, 4.54e-4, 4.2e-4, 3.9e-4, 3.61e-4, 3.35e-4,
    3.11e-4, 2.88e-4, 2.67e-4, 2.48e-4, 2.3e-4, 2.14e-4, 1.99e-4, 1.84e-4,
    1.71e-4, 1.59e-4, 1.48e-4, 1.38e-4, 1.28e-4, 1.19e-4, 1.11e-4, 1.03e-4,
    9.58e-5, 8.92e-5, 8.3e-5, 7.73e-5, 7.2e-5, 6.71e-5, 6.25e-5, 5.82e-5,
    5.43e-5, 5.06e-5, 4.71e-5, 4.4e-5, 4.1e-5, 3.82e-5, 3.57e-5, 3.33e-5,
    3.11e-5, 2.9e-5, 2.71e-5, 2.53e-5, 2.36e-5, 2.21e-5, 2.06e-5, 1.93e-5,
    1.8e-5, 1.68e-5, 1.57e-5, 1.47e-5, 1.38e-5, 1.29e-5, 1.21e-5, 1.13e-5,
    1.06e-5, 9.9e-6, 9.27e-6, 8.68e-6, 8.13e-6, 7.62e-6, 7.14e-6, 6.69e-6,
    6.28e-6, 5.89e-6, 5.52e-6, 5.17e-6, 4.86e-6, 4.56e-6, 4.28e-6, 4.02e-6,
    3.77e-6, 3.54e-6, 3.32e-6, 3.12e-6, 2.93e-6, 2.76e-6, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0,
  ],
};

const CIE_S_cone_opic = {
  wavelength: [
    390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
    405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
    420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
    435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
    450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
    465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
    480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
    495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
    510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
    525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
    540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
    555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
    570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
    585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
    600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
    615,
  ],
  value: [
    0.00614265, 0.0074428, 0.00901661, 0.010917, 0.0132053, 0.0159515,
    0.0192347, 0.0231436, 0.027775, 0.0332339, 0.0396308, 0.0470801, 0.0557012,
    0.0656137, 0.0769323, 0.0897612, 0.104188, 0.120273, 0.138044, 0.157485,
    0.17853, 0.201077, 0.225091, 0.250566, 0.277507, 0.305941, 0.335858,
    0.366981, 0.398876, 0.430998, 0.462692, 0.493357, 0.523006, 0.551939,
    0.580599, 0.60957, 0.639359, 0.669651, 0.699829, 0.729177, 0.756885,
    0.782292, 0.805666, 0.827599, 0.84878, 0.869984, 0.891761, 0.913444,
    0.933977, 0.952218, 0.96696, 0.97734, 0.984028, 0.988144, 0.990851,
    0.993336, 0.996373, 0.999038, 0.999978, 0.997844, 0.991329, 0.979657,
    0.963905, 0.945573, 0.926078, 0.906735, 0.888509, 0.871353, 0.854998,
    0.839198, 0.823726, 0.808307, 0.792431, 0.775569, 0.757244, 0.737043,
    0.71473, 0.690558, 0.66489, 0.638078, 0.610456, 0.582346, 0.554065,
    0.525903, 0.498108, 0.470894, 0.44445, 0.418992, 0.394699, 0.371707,
    0.350108, 0.329904, 0.310864, 0.292741, 0.275338, 0.258497, 0.242158,
    0.226504, 0.211726, 0.19796, 0.185297, 0.173751, 0.163149, 0.153311,
    0.144086, 0.135351, 0.127011, 0.119017, 0.111333, 0.103934, 0.096799,
    0.0899169, 0.0832878, 0.0769157, 0.0708052, 0.0649614, 0.0594049, 0.0542076,
    0.0494281, 0.0450993, 0.0412337, 0.0378142, 0.0347627, 0.0320029, 0.0294746,
    0.02713, 0.0249376, 0.0228931, 0.0209956, 0.0192427, 0.0176298, 0.0161501,
    0.0147911, 0.0135407, 0.0123884, 0.0113252, 0.0103437, 0.00944092,
    0.00861365, 0.00785831, 0.00717089, 0.00654648, 0.00597777, 0.00545794,
    0.00498125, 0.00454287, 0.00413908, 0.00376794, 0.00342783, 0.00311696,
    0.00283352, 0.00257556, 0.00234084, 0.00212722, 0.00193276, 0.00175573,
    0.00159455, 0.00144783, 0.0013143, 0.00119281, 0.0010823, 0.000981819,
    0.000890533, 0.000807687, 0.000732568, 0.000664512, 0.000602887,
    0.000547062, 0.000496461, 0.000450571, 0.000408931, 0.000371136,
    0.000336838, 0.000305723, 0.000277504, 0.000251918, 0.000228725,
    0.000207699, 0.000188638, 0.000171357, 0.000155688, 0.00014148, 0.000128596,
    0.000116912, 0.000106316, 0.0000967045, 0.0000879858, 0.0000800756,
    0.0000728979, 0.0000663837, 0.0000604705, 0.000055102, 0.0000502269,
    0.0000457988, 0.0000417759, 0.0000381202, 0.0000347974, 0.0000317763,
    0.0000290288, 0.0000265294, 0.0000242549, 0.0000221847, 0.0000202996,
    0.0000185826, 0.0000170182, 0.0000155924, 0.0000142924, 0.0000131066,
    0.0000120248, 0.0000110373, 0.0000101356, 0.00000931202, 0.00000855941,
    0.00000787141, 0.00000724221, 0.00000666657, 0.0000061397, 0.00000565727,
    0.00000521535, 0.00000481036, 0.00000443906, 0.0000040985, 0.00000378599,
    0.00000349911, 0.00000323563, 0.00000299354,
  ],
};

const CIE_M_cone_opic = {
  wavelength: [
    390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
    405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
    420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
    435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
    450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
    465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
    480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
    495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
    510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
    525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
    540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
    555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
    570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
    585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
    600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
    615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
    630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
    645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
    660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
    675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
    690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
    705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
    720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
    735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
    750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
    765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
    780,
  ],
  value: [
    0.000358227, 0.00043866, 0.00053623, 0.000654061, 0.000795649, 0.000964828,
    0.00116572, 0.00140263, 0.00167992, 0.0020018, 0.00237208, 0.00279433,
    0.00327374, 0.0038166, 0.00443021, 0.00512316, 0.00590458, 0.00678005,
    0.0077526, 0.00882286, 0.00998841, 0.0112452, 0.0125949, 0.0140425,
    0.0155944, 0.0172596, 0.0190467, 0.0209545, 0.0229763, 0.0251017, 0.0273163,
    0.0296062, 0.0319746, 0.034433, 0.0369983, 0.0396928, 0.0425402, 0.0455474,
    0.0487161, 0.0520467, 0.0555384, 0.0591876, 0.0629819, 0.0669031, 0.0709285,
    0.0750299, 0.0791769, 0.0833463, 0.087516, 0.0916625, 0.0957612, 0.0997977,
    0.103804, 0.107834, 0.111948, 0.11622, 0.120706, 0.125363, 0.130111,
    0.134856, 0.139493, 0.143943, 0.148281, 0.152637, 0.157157, 0.162006,
    0.167331, 0.173144, 0.179417, 0.186117, 0.193202, 0.200621, 0.208315,
    0.216212, 0.224231, 0.232275, 0.240257, 0.24816, 0.255987, 0.263744,
    0.271441, 0.279097, 0.286755, 0.294476, 0.302323, 0.310372, 0.318692,
    0.327307, 0.336232, 0.34548, 0.355066, 0.364985, 0.375142, 0.38541,
    0.395646, 0.405688, 0.415435, 0.425064, 0.434851, 0.445097, 0.456137,
    0.468236, 0.481255, 0.494927, 0.508947, 0.52297, 0.536701, 0.550195,
    0.563616, 0.57715, 0.591003, 0.60535, 0.62016, 0.635343, 0.650796, 0.666404,
    0.682055, 0.697672, 0.713186, 0.728526, 0.743612, 0.758396, 0.772966,
    0.787457, 0.802017, 0.816808, 0.831919, 0.847096, 0.861972, 0.876152,
    0.889214, 0.900812, 0.911006, 0.919968, 0.92789, 0.934977, 0.941414,
    0.947279, 0.952622, 0.957498, 0.961962, 0.96608, 0.969966, 0.973743,
    0.977539, 0.981481, 0.985629, 0.989754, 0.993551, 0.996714, 0.998931,
    0.999942, 0.999692, 0.998178, 0.995405, 0.991383, 0.986199, 0.980229,
    0.973906, 0.967653, 0.961876, 0.95682, 0.952151, 0.947398, 0.942105,
    0.935829, 0.928274, 0.919667, 0.910356, 0.900677, 0.890949, 0.881386,
    0.871834, 0.862059, 0.85184, 0.840969, 0.829303, 0.816911, 0.80391,
    0.790413, 0.776526, 0.762311, 0.747669, 0.732476, 0.716622, 0.700013,
    0.682647, 0.664817, 0.646858, 0.629072, 0.611728, 0.594998, 0.578783,
    0.562935, 0.547321, 0.531825, 0.516354, 0.50087, 0.48535, 0.469777,
    0.454142, 0.438454, 0.422778, 0.407188, 0.391752, 0.376527, 0.361559,
    0.346856, 0.332422, 0.318261, 0.304378, 0.290784, 0.277506, 0.264575,
    0.252012, 0.239837, 0.228065, 0.216703, 0.205754, 0.195221, 0.185104,
    0.175398, 0.166091, 0.157169, 0.14862, 0.140431, 0.132591, 0.125092,
    0.117928, 0.111091, 0.104573, 0.0983663, 0.0924685, 0.0868759, 0.0815834,
    0.0765841, 0.0718683, 0.0674186, 0.0632176, 0.0592492, 0.055499, 0.051955,
    0.0486103, 0.0454591, 0.0424945, 0.0397097, 0.0370952, 0.0346347, 0.0323125,
    0.0301151, 0.0280314, 0.0260564, 0.0242011, 0.022476, 0.020887, 0.0194366,
    0.01812, 0.0169149, 0.0157991, 0.0147543, 0.013766, 0.0128246, 0.0119304,
    0.011085, 0.0102892, 0.00954315, 0.00884609, 0.008196, 0.00759059,
    0.00702754, 0.00650455, 0.00601952, 0.00557093, 0.00515728, 0.00477687,
    0.00442794, 0.00410832, 0.0038147, 0.00354392, 0.00329329, 0.0030605,
    0.00284369, 0.00264175, 0.00245374, 0.00227875, 0.00211596, 0.00196456,
    0.00182378, 0.00169287, 0.00157115, 0.00145798, 0.00135274, 0.00125476,
    0.0011634, 0.00107812, 0.000998424, 0.000923962, 0.000854713, 0.000790652,
    0.000731684, 0.000677653, 0.000628297, 0.000583108, 0.000541584,
    0.000503294, 0.00046787, 0.000435007, 0.00040449, 0.000376138, 0.000349784,
    0.000325278, 0.000302477, 0.000281237, 0.000261427, 0.00024293, 0.000225641,
    0.000209478, 0.0001944, 0.00018037, 0.000167347, 0.000155286, 0.000144135,
    0.00013383, 0.000124309, 0.000115513, 0.000107388, 0.00009988, 0.000092932,
    0.0000864907, 0.000080509, 0.0000749453, 0.0000697652, 0.000064947,
    0.0000604718, 0.0000563207, 0.0000524748, 0.0000489142, 0.0000456137,
    0.000042549, 0.0000396989, 0.0000370443, 0.0000345688, 0.0000322588,
    0.0000301026, 0.0000280893, 0.0000262088, 0.0000244529, 0.0000228177,
    0.0000212995, 0.0000198941, 0.0000185965, 0.0000174003, 0.0000162931,
    0.0000152632, 0.0000143005, 0.0000133965, 0.0000125449, 0.0000117441,
    0.0000109929, 0.00001029, 0.00000963397, 0.00000902263, 0.00000845301,
    0.00000792207, 0.000007427, 0.00000696522, 0.00000653422, 0.00000613129,
    0.00000575391, 0.00000539984, 0.00000506711, 0.00000475413, 0.00000446019,
    0.00000418466, 0.0000039269, 0.00000368617, 0.00000346157, 0.00000325155,
    0.00000305464, 0.00000286951, 0.00000269504, 0.0000025304, 0.0000023755,
    0.00000223033, 0.00000209478, 0.00000196864, 0.00000185152, 0.00000174248,
    0.0000016406, 0.00000154507, 0.00000145518,
  ],
};

const CIE_L_cone_opic = {
  wavelength: [
    390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
    405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
    420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
    435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
    450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
    465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
    480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
    495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
    510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
    525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
    540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
    555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569,
    570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
    585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599,
    600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
    615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
    630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
    645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
    660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
    675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
    690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
    705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
    720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
    735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749,
    750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
    765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
    780,
  ],
  value: [
    0.000407619, 0.000497068, 0.000604713, 0.00073364, 0.000887247, 0.00106921,
    0.0012834, 0.00153382, 0.00182443, 0.00215896, 0.00254073, 0.00297282,
    0.00345993, 0.00400793, 0.0046237, 0.00531546, 0.00609138, 0.00695291,
    0.00789634, 0.008913, 0.00998835, 0.0111054, 0.0122607, 0.0134578,
    0.0147044, 0.016013, 0.0173958, 0.0188452, 0.020344, 0.02187, 0.0233957,
    0.0248961, 0.0263761, 0.0278541, 0.0293551, 0.0309104, 0.0325498, 0.0342714,
    0.036062, 0.0379052, 0.039781, 0.0416705, 0.0435728, 0.0454932, 0.0474385,
    0.0494172, 0.0514343, 0.0534735, 0.0555102, 0.0575166, 0.0594619, 0.061324,
    0.0631288, 0.0649189, 0.0667425, 0.0686538, 0.0706963, 0.0728508, 0.0750778,
    0.0773325, 0.0795647, 0.0817368, 0.0838826, 0.0860598, 0.0883322, 0.0907704,
    0.0934397, 0.0963577, 0.0995304, 0.102964, 0.106663, 0.110629, 0.114828,
    0.119217, 0.12374, 0.128336, 0.132947, 0.13757, 0.142218, 0.146905,
    0.151651, 0.156475, 0.161404, 0.166464, 0.17169, 0.177116, 0.182777,
    0.188685, 0.194845, 0.201261, 0.20794, 0.214875, 0.222022, 0.229316,
    0.236684, 0.244046, 0.251347, 0.258695, 0.266252, 0.274202, 0.282752,
    0.292071, 0.302094, 0.312673, 0.323637, 0.334786, 0.345943, 0.357126,
    0.368416, 0.379907, 0.391705, 0.403905, 0.4165, 0.429453, 0.44272, 0.456252,
    0.469997, 0.483926, 0.498012, 0.512227, 0.526538, 0.540923, 0.555406,
    0.570025, 0.584828, 0.599867, 0.615162, 0.630569, 0.645883, 0.66088,
    0.675313, 0.688975, 0.701886, 0.71414, 0.725841, 0.737108, 0.748046,
    0.758684, 0.769032, 0.779099, 0.7889, 0.798472, 0.807945, 0.817478,
    0.827239, 0.837403, 0.848078, 0.859064, 0.870068, 0.880779, 0.890871,
    0.900057, 0.908253, 0.915433, 0.921575, 0.92666, 0.930744, 0.93416,
    0.937318, 0.940634, 0.944527, 0.949291, 0.95468, 0.960309, 0.965785,
    0.970703, 0.974756, 0.978055, 0.980819, 0.983271, 0.985636, 0.988085,
    0.99056, 0.992945, 0.995124, 0.996979, 0.998411, 0.999391, 0.999912,
    0.999965, 0.999543, 0.998615, 0.997051, 0.994701, 0.991416, 0.987057,
    0.981599, 0.975451, 0.96912, 0.963093, 0.957841, 0.953664, 0.950236,
    0.947086, 0.943752, 0.939781, 0.934826, 0.928917, 0.922177, 0.914729,
    0.906693, 0.89817, 0.889188, 0.879759, 0.869894, 0.859605, 0.848912,
    0.837865, 0.826522, 0.81494, 0.803173, 0.791253, 0.779118, 0.766691, 0.7539,
    0.74068, 0.726995, 0.712905, 0.698491, 0.683829, 0.668991, 0.654037,
    0.638979, 0.623825, 0.608579, 0.593248, 0.577857, 0.562493, 0.547248,
    0.532209, 0.517449, 0.502993, 0.488692, 0.474376, 0.459896, 0.445125,
    0.430007, 0.414687, 0.39934, 0.384122, 0.369168, 0.35458, 0.340389,
    0.326609, 0.313249, 0.300316, 0.287817, 0.275762, 0.264158, 0.253009,
    0.242316, 0.232061, 0.222158, 0.212516, 0.20306, 0.19373, 0.184495,
    0.175402, 0.166509, 0.157865, 0.149509, 0.14147, 0.13376, 0.126383,
    0.119343, 0.112638, 0.106264, 0.100208, 0.0944558, 0.0889934, 0.0838077,
    0.0788866, 0.0742192, 0.0697953, 0.065605, 0.0616384, 0.0578857, 0.0543366,
    0.0509811, 0.0478096, 0.0448132, 0.0419831, 0.0393111, 0.0367892, 0.0344098,
    0.032166, 0.0300509, 0.0280594, 0.0261861, 0.024426, 0.0227738, 0.0212238,
    0.0197679, 0.0183986, 0.0171092, 0.0158939, 0.0147492, 0.0136773, 0.0126804,
    0.011759, 0.0109123, 0.0101373, 0.00942568, 0.00876917, 0.00816076,
    0.00759453, 0.00706588, 0.00657252, 0.00611262, 0.0056844, 0.00528607,
    0.00491573, 0.00457086, 0.00424908, 0.00394832, 0.00366675, 0.00340297,
    0.00315632, 0.00292624, 0.00271213, 0.00251327, 0.00232895, 0.00215836,
    0.00200071, 0.00185521, 0.00172108, 0.0015975, 0.00148342, 0.00137787,
    0.00127998, 0.001189, 0.00110433, 0.00102563, 0.000952602, 0.000884959,
    0.000822396, 0.000764585, 0.00071111, 0.00066157, 0.000615612, 0.000572917,
    0.000533206, 0.000496234, 0.000461782, 0.000429654, 0.00039967, 0.00037169,
    0.00034565, 0.000321494, 0.000299155, 0.000278553, 0.000259583, 0.000242061,
    0.000225809, 0.000210674, 0.000196528, 0.000183271, 0.000170868, 0.00015929,
    0.000148506, 0.000138482, 0.000129179, 0.000120542, 0.000112519,
    0.000105061, 0.0000981226, 0.0000916641, 0.0000856455, 0.0000800302,
    0.0000747858, 0.0000698827, 0.0000652966, 0.0000610128, 0.0000570183,
    0.0000532996, 0.000049843, 0.0000466322, 0.0000436424, 0.0000408501,
    0.0000382346, 0.0000357781, 0.0000334676, 0.0000313007, 0.0000292761,
    0.0000273908, 0.0000256411, 0.0000240205, 0.000022516, 0.0000211145,
    0.0000198046, 0.0000185766,
  ],
};

const CIE_Rhodopic = {
  wavelength: [
    380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
    395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
    410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
    425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
    440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
    455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
    470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
    485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
    500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
    515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
    530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
    545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
    560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
    575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
    590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
    605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
    620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
    635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
    650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
    665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
    680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
    695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
    710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
    725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
    740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
    755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
    770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
  ],
  value: [
    0.000589, 0.000665, 0.000752, 0.000854, 0.000972, 0.001108, 0.001268,
    0.001453, 0.001668, 0.001918, 0.002209, 0.002547, 0.002939, 0.003394,
    0.003921, 0.00453, 0.00524, 0.00605, 0.00698, 0.00806, 0.00929, 0.0107,
    0.01231, 0.01413, 0.01619, 0.01852, 0.02113, 0.02405, 0.0273, 0.03089,
    0.03484, 0.03916, 0.0439, 0.049, 0.0545, 0.0604, 0.0668, 0.0736, 0.0808,
    0.0885, 0.0966, 0.1052, 0.1141, 0.1235, 0.1334, 0.1436, 0.1541, 0.1651,
    0.1764, 0.1879, 0.1998, 0.2119, 0.2243, 0.2369, 0.2496, 0.2625, 0.2755,
    0.2886, 0.3017, 0.3149, 0.3281, 0.3412, 0.3543, 0.3673, 0.3803, 0.3931,
    0.406, 0.418, 0.431, 0.443, 0.455, 0.467, 0.479, 0.49, 0.502, 0.513, 0.524,
    0.535, 0.546, 0.557, 0.567, 0.578, 0.588, 0.599, 0.61, 0.62, 0.631, 0.642,
    0.653, 0.664, 0.676, 0.687, 0.699, 0.71, 0.722, 0.734, 0.745, 0.757, 0.769,
    0.781, 0.793, 0.805, 0.817, 0.828, 0.84, 0.851, 0.862, 0.873, 0.884, 0.894,
    0.904, 0.914, 0.923, 0.932, 0.941, 0.949, 0.957, 0.964, 0.97, 0.976, 0.982,
    0.986, 0.99, 0.994, 0.997, 0.998, 1, 1, 1, 0.998, 0.997, 0.994, 0.99, 0.986,
    0.981, 0.975, 0.968, 0.961, 0.953, 0.944, 0.935, 0.925, 0.915, 0.904, 0.892,
    0.88, 0.867, 0.854, 0.84, 0.826, 0.811, 0.796, 0.781, 0.765, 0.749, 0.733,
    0.717, 0.7, 0.683, 0.667, 0.65, 0.633, 0.616, 0.599, 0.581, 0.564, 0.548,
    0.531, 0.514, 0.497, 0.481, 0.465, 0.448, 0.433, 0.417, 0.402, 0.3864,
    0.3715, 0.3569, 0.3427, 0.3288, 0.3151, 0.3018, 0.2888, 0.2762, 0.2639,
    0.2519, 0.2403, 0.2291, 0.2182, 0.2076, 0.1974, 0.1876, 0.1782, 0.169,
    0.1602, 0.1517, 0.1436, 0.1358, 0.1284, 0.1212, 0.1143, 0.1078, 0.1015,
    0.0956, 0.0899, 0.0845, 0.0793, 0.0745, 0.0699, 0.0655, 0.0613, 0.0574,
    0.0537, 0.0502, 0.0469, 0.0438, 0.0409, 0.03816, 0.03558, 0.03315, 0.03087,
    0.02874, 0.02674, 0.02487, 0.02312, 0.02147, 0.01994, 0.01851, 0.01718,
    0.01593, 0.01477, 0.01369, 0.01269, 0.01175, 0.01088, 0.01007, 0.00932,
    0.00862, 0.00797, 0.00737, 0.00682, 0.0063, 0.00582, 0.00538, 0.00497,
    0.00459, 0.00424, 0.003913, 0.003613, 0.003335, 0.003079, 0.002842,
    0.002623, 0.002421, 0.002235, 0.002062, 0.001903, 0.001757, 0.001621,
    0.001497, 0.001382, 0.001276, 0.001178, 0.001088, 0.001005, 0.000928,
    0.000857, 0.000792, 0.000732, 0.000677, 0.000626, 0.000579, 0.000536,
    0.000496, 0.000459, 0.000425, 0.0003935, 0.0003645, 0.0003377, 0.0003129,
    0.0002901, 0.0002689, 0.0002493, 0.0002313, 0.0002146, 0.0001991, 0.0001848,
    0.0001716, 0.0001593, 0.000148, 0.0001375, 0.0001277, 0.0001187, 0.0001104,
    0.0001026, 0.0000954, 0.0000888, 0.0000826, 0.0000769, 0.0000715, 0.0000666,
    0.000062, 0.0000578, 0.0000538, 0.0000501, 0.0000467, 0.0000436, 0.0000406,
    0.00003789, 0.00003533, 0.00003295, 0.00003075, 0.0000287, 0.00002679,
    0.00002501, 0.00002336, 0.00002182, 0.00002038, 0.00001905, 0.0000178,
    0.00001664, 0.00001556, 0.00001454, 0.0000136, 0.00001273, 0.00001191,
    0.00001114, 0.00001043, 0.00000976, 0.00000914, 0.00000856, 0.00000802,
    0.00000751, 0.00000704, 0.0000066, 0.00000618, 0.0000058, 0.00000544,
    0.0000051, 0.00000478, 0.00000449, 0.00000421, 0.000003951, 0.000003709,
    0.000003482, 0.00000327, 0.00000307, 0.000002884, 0.00000271, 0.000002546,
    0.000002393, 0.00000225, 0.000002115, 0.000001989, 0.00000187, 0.000001759,
    0.000001655, 0.000001557, 0.000001466, 0.000001379, 0.000001299,
    0.000001223, 0.000001151, 0.000001084, 0.000001022, 9.62e-7, 9.07e-7,
    8.55e-7, 8.06e-7, 7.6e-7, 7.16e-7, 6.75e-7, 6.37e-7, 6.01e-7, 5.67e-7,
    5.35e-7, 5.05e-7, 4.77e-7, 4.5e-7, 4.25e-7, 4.01e-7, 3.79e-7, 3.58e-7,
    3.382e-7, 3.196e-7, 3.021e-7, 2.855e-7, 2.699e-7, 2.552e-7, 2.413e-7,
    2.282e-7, 2.159e-7, 2.042e-7, 1.932e-7, 1.829e-7, 1.731e-7, 1.638e-7,
    1.551e-7, 1.468e-7, 1.39e-7,
  ],
};

const CIE_Melanopic = {
  wavelength: [
    380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
    395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
    410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
    425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
    440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
    455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
    470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
    485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
    500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
    515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
    530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
    545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
    560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
    575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
    590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
    605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
    620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
    635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
    650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
    665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
    680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
    695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
    710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
    725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
    740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
    755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
    770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
  ],
  value: [
    0.000918165, 0.00104557, 0.00117858, 0.00132279, 0.00148381, 0.00166724,
    0.00188102, 0.00212989, 0.00241457, 0.00273583, 0.00309442, 0.00350706,
    0.00399078, 0.00454679, 0.00517625, 0.00588035, 0.00669334, 0.00765102,
    0.00875694, 0.0100146, 0.0114277, 0.0130767, 0.0150397, 0.0173166,
    0.0199071, 0.0228112, 0.0263194, 0.0305964, 0.0354538, 0.0407028, 0.046155,
    0.0517822, 0.0577804, 0.0642972, 0.0714801, 0.0794766, 0.0891807, 0.100756,
    0.113256, 0.125732, 0.137237, 0.147446, 0.157014, 0.166463, 0.176316,
    0.187096, 0.19921, 0.212408, 0.226225, 0.240199, 0.253865, 0.267021,
    0.279976, 0.293034, 0.3065, 0.320679, 0.336016, 0.352361, 0.369128,
    0.385732, 0.401587, 0.416472, 0.430797, 0.444921, 0.459203, 0.474002,
    0.489517, 0.505522, 0.521741, 0.537898, 0.553715, 0.5691, 0.58424, 0.599281,
    0.61437, 0.629654, 0.645193, 0.660892, 0.67666, 0.692409, 0.708049,
    0.723594, 0.739105, 0.75456, 0.769938, 0.785216, 0.800683, 0.816354,
    0.831798, 0.846587, 0.860291, 0.872925, 0.88487, 0.896242, 0.907158,
    0.917734, 0.928345, 0.93895, 0.949035, 0.958091, 0.965605, 0.971976,
    0.977833, 0.983006, 0.987325, 0.990621, 0.993343, 0.995887, 0.998008,
    0.999461, 1, 0.999561, 0.998365, 0.99659, 0.994416, 0.992022, 0.988792,
    0.98422, 0.978657, 0.972451, 0.965952, 0.958844, 0.950716, 0.941778,
    0.932236, 0.922299, 0.911832, 0.900602, 0.888663, 0.876073, 0.862888,
    0.848801, 0.833678, 0.817832, 0.801579, 0.785233, 0.768718, 0.751807,
    0.734593, 0.717169, 0.699628, 0.681888, 0.663881, 0.645724, 0.627533,
    0.609422, 0.591339, 0.573207, 0.555105, 0.537112, 0.519309, 0.501645,
    0.484067, 0.466643, 0.449442, 0.432533, 0.415862, 0.399372, 0.383136,
    0.367224, 0.351707, 0.336537, 0.321647, 0.307085, 0.292899, 0.279135,
    0.265737, 0.252648, 0.239917, 0.227592, 0.215722, 0.204238, 0.193075,
    0.182288, 0.17193, 0.162056, 0.152601, 0.143487, 0.134748, 0.126416,
    0.118526, 0.111007, 0.103793, 0.0969206, 0.0904259, 0.0843457, 0.0786198,
    0.073175, 0.0680288, 0.0631984, 0.0587013, 0.0544832, 0.0504889, 0.0467344,
    0.0432357, 0.0400089, 0.0370102, 0.0341903, 0.0315562, 0.0291153, 0.0268747,
    0.0248014, 0.0228597, 0.0210534, 0.0193864, 0.0178624, 0.0164578, 0.015147,
    0.0139314, 0.012812, 0.0117901, 0.0108488, 0.00997112, 0.0091585,
    0.00841242, 0.0077343, 0.00711255, 0.00653476, 0.0060011, 0.00551174,
    0.00506686, 0.00465869, 0.00427946, 0.00392939, 0.00360872, 0.00331766,
    0.00305109, 0.00280374, 0.0025756, 0.00236668, 0.00217698, 0.00200317,
    0.0018419, 0.00169317, 0.00155692, 0.00143314, 0.00131972, 0.00121451,
    0.00111743, 0.00102839, 0.000947313, 0.000872814, 0.000803576, 0.00073962,
    0.00068097, 0.000627648, 0.000578753, 0.000533358, 0.00049144, 0.00045298,
    0.000417955, 0.000385789, 0.000355905, 0.000328289, 0.000302926,
    0.000279801, 0.000258544, 0.000238785, 0.000220508, 0.000203699,
    0.000188341, 0.000174192, 0.00016102, 0.000148821, 0.000137594, 0.000127337,
    0.000117891, 0.000109096, 0.000100949, 0.0000934437, 0.0000865751,
    0.0000802405, 0.0000743383, 0.000068865, 0.0000638172, 0.0000591914,
    0.0000549203, 0.0000509374, 0.0000472404, 0.0000438269, 0.0000406945,
    0.000037799, 0.0000350966, 0.0000325857, 0.0000302647, 0.000028132,
    0.0000261587, 0.0000243158, 0.0000226017, 0.0000210148, 0.0000195535,
    0.0000181982, 0.0000169302, 0.0000157493, 0.0000146553, 0.000013648,
    0.0000127143, 0.0000118407, 0.0000110269, 0.0000102723, 0.00000957637,
    0.00000893033, 0.00000832543, 0.00000776135, 0.00000723773, 0.00000675425,
    0.00000630499, 0.00000588407, 0.00000549115, 0.00000512592, 0.00000478804,
    0.00000447347, 0.00000417829, 0.00000390243, 0.00000364583, 0.00000340841,
    0.00000318739, 0.00000297998, 0.00000278604, 0.00000260548, 0.00000243819,
    0.00000228225, 0.0000021358, 0.00000199874, 0.00000187101, 0.00000175252,
    0.00000164197, 0.00000153806, 0.00000144073, 0.00000134993, 0.0000012656,
    0.00000118683, 0.00000111273, 0.00000104326, 9.78385e-7, 9.18078e-7,
    8.61705e-7, 8.0864e-7, 7.58853e-7, 7.12313e-7, 6.68991e-7, 6.28444e-7,
    5.90239e-7, 5.54363e-7, 5.20798e-7, 4.89531e-7, 4.60251e-7, 4.32648e-7,
    4.0671e-7, 3.8242e-7, 3.59766e-7, 3.38528e-7, 3.1849e-7, 2.99644e-7,
    2.81981e-7, 2.65493e-7, 2.50026e-7, 2.35424e-7, 2.21681e-7, 2.08789e-7,
    1.9674e-7, 1.85426e-7, 1.74736e-7, 1.64666e-7, 1.55212e-7, 1.4637e-7,
    1.38062e-7, 1.30208e-7, 1.22805e-7, 1.15848e-7, 1.09332e-7, 1.03202e-7,
    9.74005e-8, 9.19274e-8, 8.67807e-8, 8.19587e-8, 7.74202e-8, 7.31243e-8,
    6.90693e-8, 6.52534e-8, 6.16749e-8, 5.83044e-8, 5.51124e-8, 5.20972e-8,
    4.92575e-8, 4.65916e-8, 4.40782e-8, 4.16962e-8, 3.94444e-8, 3.73218e-8,
    3.53272e-8, 3.34451e-8, 3.166e-8, 2.99712e-8, 2.83782e-8, 2.68803e-8,
    2.548e-8, 2.4166e-8, 2.29167e-8, 2.17105e-8, 2.05258e-8,
  ],
};

const setwavelength = [
  380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394,
  395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409,
  410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
  425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
  440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
  455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
  470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
  485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
  500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514,
  515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
  530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
  545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559,
  560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
  575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589,
  590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
  605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619,
  620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
  635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
  650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
  665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
  680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
  695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709,
  710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
  725, 726, 727, 728, 729, 730,
];

function CCTcalc(spd) {
  // Load values
  var deltaWavelength = createDelta(spd.wavelength);

  // Interpolate bar values
  var xbar = interp1(cie.wavelength, cie.xbar, spd.wavelength, 0);
  var ybar = interp1(cie.wavelength, cie.ybar, spd.wavelength, 0);
  var zbar = interp1(cie.wavelength, cie.zbar, spd.wavelength, 0);

  // Trapz bar values
  var X = sumproduct(spd.value, arrayMul(deltaWavelength, xbar));
  var Y = sumproduct(spd.value, arrayMul(deltaWavelength, ybar));
  var Z = sumproduct(spd.value, arrayMul(deltaWavelength, zbar));

  // Base math
  x = X / (X + Y + Z);
  y = Y / (X + Y + Z);
  u = (4 * x) / (-2 * x + 12 * y + 3);
  v = (6 * y) / (-2 * x + 12 * y + 3);

  // Find adjacent lines to (us,vs)
  var index = 0;
  var d1 =
    (v - isoTempLines.vt[1] - isoTempLines.tt[1] * (u - isoTempLines.ut[1])) /
    Math.sqrt(1 + isoTempLines.tt[1] * isoTempLines.tt[1]);
  var d2;
  for (var i = 1; i < isoTempLines.T.length; i++) {
    d2 =
      (v - isoTempLines.vt[i] - isoTempLines.tt[i] * (u - isoTempLines.ut[i])) /
      Math.sqrt(1 + isoTempLines.tt[i] * isoTempLines.tt[i]);
    if (d1 / d2 < 0) {
      index = i;
      break;
    } else {
      d1 = d2;
    }
  }

  // Calc Tc
  var Tc;
  if (index == 0) {
    Tc = NaN; //-1;
  } else {
    Tc =
      1 /
      (1 / isoTempLines.T[index - 1] +
        (d1 / (d1 - d2)) *
          (1 / isoTempLines.T[index] - 1 / isoTempLines.T[index - 1]));
  }
  return Tc;
}

function CLAcalc(spd) {
  var arod1 = 2.3;
  var arod2 = 1.6;
  var a_bminusY = 0.21;

  var g1 = 1;
  var g2 = 0.16;
  var k = 0.2616;

  var rodSat = 6.5215;

  var wavelengths = spd.wavelength;
  var values = spd.value;

  var efs = efficiencyFunctions(wavelengths, thickness);
  var deltaWavelength = createDelta(wavelengths);

  var vlambda = sumproduct(values, arrayMul(deltaWavelength, efs.Vlambda));
  var vprime = sumproduct(values, arrayMul(deltaWavelength, efs.Vprime));
  var scone = sumproduct(values, arrayMul(deltaWavelength, efs.Scone));
  var melanopsin = sumproduct(
    values,
    arrayMul(deltaWavelength, efs.Melanopsin)
  );
  combinedValues.CIE_S_cone_opic_irr = sumproduct(
    values,
    arrayMul(deltaWavelength, efs.CIE_S_cone)
  );
  combinedValues.CIE_M_cone_opic_irr = sumproduct(
    values,
    arrayMul(deltaWavelength, efs.CIE_M_cone)
  );
  combinedValues.CIE_L_cone_opic_irr = sumproduct(
    values,
    arrayMul(deltaWavelength, efs.CIE_L_cone)
  );
  combinedValues.CIE_Rhodopic_irr = sumproduct(
    values,
    arrayMul(deltaWavelength, efs.CIE_Rhodopic)
  );
  combinedValues.CIE_Melanopic_irr = sumproduct(
    values,
    arrayMul(deltaWavelength, efs.CIE_Melanopic)
  );

  var rod_mel = vprime / (vlambda + g1 * scone);
  var rod_bminusY = vprime / (vlambda + g2 * scone);

  var bminusY = scone - k * vlambda;
  var cs1 = melanopsin;
  if (cs1 < 0) {
    cs1 = 0;
  }
  var cs2, cs;
  var rod = arod2 * rod_bminusY * (1 - Math.exp(-vprime / rodSat));
  var rodmel = arod1 * rod_mel * (1 - Math.exp(-vprime / rodSat));
  if (bminusY >= 0) {
    cs2 = a_bminusY * bminusY;
    if (cs2 < 0) {
      cs2 = 0;
    }
    var cs = cs1 + cs2 - rod - rodmel;
  } else {
    cs = cs1 - rodmel;
  }
  if (cs < 0) {
    cs = 0;
  }
  cla = cs * 1548;
  return cla;
}

function cla2cs(cla) {
  return 0.7 * (1 - 1 / (1 + Math.pow((cla * _t * _d) / 355.7, 1.1026)));
}

function cs2cla(cs) {
  return (355.7 / (_t * _d)) * Math.pow(1 / (1 - cs / 0.7) - 1, 1 / 1.1026);
}

function blackbodySpectra(Tc, wave) {
  /* Black Body Spectra
	 Calculates the Planktian black body spectrum of given color temperature, Tc.
	% Function arguements are:
	%	Tc - color temperature in Kelvin
	%	wave - column vector specifiying the wavelength values at which the spd is evaluated */

  // 2002 CODATA recommended values
  var h = 6.6260693e-34;
  var c = 299792458;
  var k = 1.3806505e-23;

  var c1 = 2 * Math.PI * h * Math.pow(c, 2);
  var c2 = (h * c) / k;
  var e9 = 1e-9;

  //var spdBlackBody = arrayDiv(arrayScalar(arrayBase(arrayScalar(wave,e9),-5),c1),(Math.exp(arrayScalar(arrayInverse(arrayScalar(arrayScalar(wave,e9),Tc)),c2) - 1)));
  var calc1 = arrayScalar(arrayBase(arrayScalar(wave, e9), -5), c1);
  var calc2 = arrayAdd2(
    arrayPow(
      Math.exp(1),
      arrayScalar(arrayInverse(arrayScalar(arrayScalar(wave, e9), Tc)), c2)
    ),
    -1
  );

  var spdBlackBody = arrayDiv(calc1, calc2);

  return spdBlackBody;
}

function CIEDaySpectra(Tc, wave) {
  var v = NaN;
  if (Tc <= 25000) {
    var cieDaySn = {
      wavelength: [
        300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400, 410, 420, 430,
        440, 450, 460, 470, 480, 490, 500, 510, 520, 530, 540, 550, 560, 570,
        580, 590, 600, 610, 620, 630, 640, 650, 660, 670, 680, 690, 700, 710,
        720, 730, 740, 750, 760, 770, 780, 790, 800, 810, 820, 830,
      ],
      S0: [
        0.04, 6, 29.6, 55.3, 57.3, 61.8, 61.5, 68.8, 63.4, 65.8, 94.8, 104.8,
        105.9, 96.8, 113.9, 125.6, 125.5, 121.3, 121.3, 113.5, 113.1, 110.8,
        106.5, 108.8, 105.3, 104.4, 100, 96, 95.1, 89.1, 90.5, 90.3, 88.4, 84,
        85.1, 81.9, 82.6, 84.9, 81.3, 71.9, 74.3, 76.4, 63.3, 71.7, 77, 65.2,
        47.7, 68.6, 65, 66, 61, 53.3, 58.9, 61.9,
      ],
      S1: [
        0.02, 4.5, 22.4, 42, 40.6, 41.6, 38, 42.4, 38.5, 35, 43.4, 46.3, 43.9,
        37.1, 36.7, 35.9, 32.6, 27.9, 24.3, 20.1, 16.2, 13.2, 8.6, 6.1, 4.2,
        1.9, 0, -1.6, -3.5, -3.5, -5.8, -7.2, -8.6, -9.5, -10.9, -10.7, -12,
        -14, -13.6, -12, -13.3, -12.9, -10.6, -11.6, -12.2, -10.2, -7.8, -11.2,
        -10.4, -10.6, -9.7, -8.3, -9.3, -9.8,
      ],
      S2: [
        0, 2, 4, 8.5, 7.8, 6.7, 5.3, 6.1, 3, 1.2, -1.1, -0.5, -0.7, -1.2, -2.6,
        -2.9, -2.8, -2.6, -2.6, -1.8, -1.5, -1.3, -1.2, -1, -0.5, -0.3, 0, 0.2,
        0.5, 2.1, 3.2, 4.1, 4.7, 5.1, 6.7, 7.3, 8.6, 9.8, 10.2, 8.3, 9.6, 8.5,
        7, 7.6, 8, 6.7, 5.2, 7.4, 6.8, 7, 6.4, 5.5, 6.1, 6.5,
      ],
    };
    //var cieDaySn = cieDaySn();
    var xd;
    if (Tc <= 7000) {
      xd =
        -4.607e9 / Math.pow(Tc, 3) +
        2.9678e6 / Math.pow(Tc, 2) +
        0.09911e3 / Tc +
        0.244063;
    } else {
      xd =
        -2.0064e9 / Math.pow(Tc, 3) +
        1.9018e6 / Math.pow(Tc, 2) +
        0.24748e3 / Tc +
        0.23704;
    }

    var yd = -3.0 * xd * xd + 2.87 * xd - 0.275;
    var M1 =
      (-1.3515 - 1.7703 * xd + 5.9114 * yd) /
      (0.0241 + 0.2562 * xd - 0.7341 * yd);
    var M2 =
      (0.03 - 31.4424 * xd + 30.0717 * yd) /
      (0.0241 + 0.2562 * xd - 0.7341 * yd);
    var spdDay = arrayAdd(
      cieDaySn.S0,
      arrayAdd(arrayScalar(cieDaySn.S1, M1), arrayScalar(cieDaySn.S2, M2))
    );

    v = pchip(cieDaySn.wavelength, spdDay, wave);
    for (var i = 0; i < v.length; i++) {
      if (isNaN(v[i])) {
        v[i] = 0;
      }
    }
  }
  return v;
}

function pchip(x, y, xx) {
  var h = arrayDiff(x);
  var m = 1;
  var del = arrayDiv(arrayDiff(y), h);
  var n = x.length;

  // First derivatives
  var d = pchipslopes(x, y, del);

  // Piecewise polynomial coefficients
  var d1 = d.slice(0, n - 1);
  var d2 = d.slice(1, n);
  var a1 = arrayScalar(d1, 2);
  var a = arrayDiv(
    arraySub(arraySub(arrayScalar(del, 3), arrayScalar(d1, 2)), d2),
    h
  );
  var b = arrayDiv(
    arrayAdd(arraySub(d1, arrayScalar(del, 2)), d2),
    arrayBase(h, 2)
  );

  // Find Subinterval indicies
  var k = arrayRep(1, xx.length);
  for (var j = 1; j < x.length; j++) {
    for (var i = 0; i < xx.length; i++) {
      if (x[j] <= xx[i]) {
        k[i] = j;
      }
    }
  }

  // Evaluate inerpolant
  var s = arraySub(xx, arrayEval(x, k));
  var v = arrayAdd(
    arrayEval(y, k),
    arrayMul(
      arrayAdd(
        arrayEval(d, k),
        arrayMul(arrayAdd(arrayEval(a, k), arrayMul(arrayEval(b, k), s)), s)
      ),
      s
    )
  );

  return v;
}

function pchipslopes(x, y, del) {
  var n = x.length;
  var d = arrayRep(0, y.length);
  var h = arrayDiff(x);

  // k = find(sign(del(1:n-2)).*sign(del(2:n-1)) > 0);
  var signDel = arrayDiv(del, arrayAbs(del));
  var signDel1 = signDel.slice(0, n - 1);
  var signDel2 = signDel.slice(1, n);
  var signDelTest = arrayMul(signDel1, signDel2);
  var k = [];
  var kIndex = 0;
  for (var i = 0; i < signDelTest.length; i++) {
    if (signDelTest[i] > 0) {
      k[kIndex] = i;
      kIndex = kIndex + 1;
    }
  }

  for (i = 0; i < k.length; i++) {
    var hs = h[k[i]] + h[k[i] + 1];
    var w1 = (h[k[i]] + hs) / (3 * hs);
    var w2 = (h[k[i] + 1] + hs) / (3 * hs);
    var dmax = Math.max(Math.abs(del[k[i]]), Math.abs(del[k[i] + 1]));
    var dmin = Math.min(Math.abs(del[k[i]]), Math.abs(del[k[i] + 1]));
    d[k[i] + 1] =
      dmin / (w1 * (del[k[i]] / dmax) + w2 * (del[k[i] + 1] / dmax));
  }

  d[0] = ((2 * h[0] + h[1]) * del[0] - h[0] * del[1]) / (h[0] + h[1]);
  if (d[0] * del[0] < 0) {
    d[0] = 0;
  } else if (del[0] * del[1] < 0 && Math.abs(d[0]) > Math.abs(del[0] * 3)) {
    d[0] = 3 * del[0];
  }
  d[n - 1] =
    ((2 * h[n - 2] + h[n - 3]) * del[n - 2] - h[n - 2] * del[n - 3]) /
    (h[n - 2] + h[n - 3]);
  if (d[n - 1] * del[n - 1] < 0) {
    d[n - 1] = 0;
  } else if (
    del[n - 2] * del[n - 3] < 0 &&
    Math.abs(d[n - 1]) > Math.abs(3 * del[n - 2])
  ) {
    d[n - 1] = 3 * del[n - 2];
  }
  return d;
}

function CRIcalc(spd) {
  // Calculate Correlated Color Temperature, Tc
  var Tc = CCTcalc(spd);

  // Interpolate bar values
  var xbar = interp1(cie.wavelength, cie.xbar, spd.wavelength, 0);
  var ybar = interp1(cie.wavelength, cie.ybar, spd.wavelength, 0);
  var zbar = interp1(cie.wavelength, cie.zbar, spd.wavelength, 0);

  // Calculate Reference Source Spectrum, spdref
  var spdref = [];
  if (Tc < 5000 && Tc > 0) {
    spdref = blackbodySpectra(Tc, spd.wavelength);
  } else {
    if (Tc <= 25000) {
      spdref = CIEDaySpectra(Tc, spd.wavelength);
    } else {
    }
  }

  // Load TCS Color Standards
  var TCS_1 = {};
  for (var iCS in TCS.color_standards) {
    if (TCS.color_standards.hasOwnProperty(iCS)) {
      TCS_1[iCS] = interp1(
        TCS.wavelength,
        arrayScalar(TCS.color_standards[iCS], 1 / 1000),
        spd.wavelength,
        0
      );
    }
  }

  // Calculate u, v chromaticity coordinates of samples
  //test illuminant, uk, vk
  var deltaWavelength = createDelta(spd.wavelength);
  var X = sumproduct(spd.value, arrayMul(deltaWavelength, xbar));
  var Y = sumproduct(spd.value, arrayMul(deltaWavelength, ybar));
  var Z = sumproduct(spd.value, arrayMul(deltaWavelength, zbar));
  var Yknormal = 100 / Y;
  var uk = (4 * X) / (X + 15 * Y + 3 * Z);
  var vk = (6 * Y) / (X + 15 * Y + 3 * Z);

  //reference illuminant, ur, vr.
  X = sumproduct(spdref, arrayMul(deltaWavelength, xbar));
  Y = sumproduct(spdref, arrayMul(deltaWavelength, ybar));
  Z = sumproduct(spdref, arrayMul(deltaWavelength, zbar));
  var Yrnormal = 100 / Y;
  var ur = (4 * X) / (X + 15 * Y + 3 * Z);
  var vr = (6 * Y) / (X + 15 * Y + 3 * Z);

  // color standards, uri, vri
  var Yki = {};
  var uki = {};
  var vki = {};
  var Yri = {};
  var uri = {};
  var vri = {};
  for (iCS in TCS_1) {
    if (TCS_1.hasOwnProperty(iCS)) {
      //test illuminant, uki, vki
      X = sumproduct(
        arrayMul(spd.value, TCS_1[iCS]),
        arrayMul(deltaWavelength, xbar)
      );
      Y = sumproduct(
        arrayMul(spd.value, TCS_1[iCS]),
        arrayMul(deltaWavelength, ybar)
      );
      Z = sumproduct(
        arrayMul(spd.value, TCS_1[iCS]),
        arrayMul(deltaWavelength, zbar)
      );
      Yki[iCS] = Y * Yknormal;
      uki[iCS] = (4 * X) / (X + 15 * Y + 3 * Z);
      vki[iCS] = (6 * Y) / (X + 15 * Y + 3 * Z);

      //reference illuminant, uri, vri
      X = sumproduct(
        arrayMul(spdref, TCS_1[iCS]),
        arrayMul(deltaWavelength, xbar)
      );
      Y = sumproduct(
        arrayMul(spdref, TCS_1[iCS]),
        arrayMul(deltaWavelength, ybar)
      );
      Z = sumproduct(
        arrayMul(spdref, TCS_1[iCS]),
        arrayMul(deltaWavelength, zbar)
      );
      Yri[iCS] = Y * Yrnormal;
      uri[iCS] = (4 * X) / (X + 15 * Y + 3 * Z);
      vri[iCS] = (6 * Y) / (X + 15 * Y + 3 * Z);
    }
  }

  // Check tolarance for reference illuminant
  var DC = Math.sqrt(Math.pow(uk - ur, 2) + Math.pow(vk - vr, 2));

  // Apply adaptive (perceived) color shift
  var ck = (4 - uk - 10 * vk) / vk;
  var dk = (1.708 * vk + 0.404 - 1.481 * uk) / vk;
  var cr = (4 - ur - 10 * vr) / vr;
  var dr = (1.708 * vr + 0.404 - 1.481 * ur) / vr;

  var cki;
  var dki;
  var ukip = {};
  var vkip = {};
  for (iCS in TCS_1) {
    if (TCS_1.hasOwnProperty(iCS)) {
      cki = (4 - uki[iCS] - 10 * vki[iCS]) / vki[iCS];
      dki = (1.708 * vki[iCS] + 0.404 - 1.481 * uki[iCS]) / vki[iCS];
      ukip[iCS] =
        (10.872 + ((0.404 * cr) / ck) * cki - ((4 * dr) / dk) * dki) /
        (16.518 + ((1.481 * cr) / ck) * cki - (dr / dk) * dki);
      vkip[iCS] = 5.52 / (16.518 + ((1.481 * cr) / ck) * cki - (dr / dk) * dki);
    }
  }

  // Transformation into 1964 Uniform space coordinates
  var Wstarr = {};
  var Ustarr = {};
  var Vstarr = {};

  var Wstark = {};
  var Ustark = {};
  var Vstark = {};
  for (iCS in TCS_1) {
    if (TCS_1.hasOwnProperty(iCS)) {
      Wstarr[iCS] = 25 * Math.pow(Yri[iCS], 0.333333) - 17;
      Ustarr[iCS] = 13 * Wstarr[iCS] * (uri[iCS] - ur);
      Vstarr[iCS] = 13 * Wstarr[iCS] * (vri[iCS] - vr);

      Wstark[iCS] = 25 * Math.pow(Yki[iCS], 0.333333) - 17;
      Ustark[iCS] = 13 * Wstark[iCS] * (ukip[iCS] - ur);
      Vstark[iCS] = 13 * Wstark[iCS] * (vkip[iCS] - vr);
    }
  }

  // Determination of resultant color shift, delta E
  var deltaE = {};
  var R = {};
  for (iCS in TCS_1) {
    if (TCS_1.hasOwnProperty(iCS)) {
      deltaE[iCS] = Math.sqrt(
        Math.pow(Ustarr[iCS] - Ustark[iCS], 2) +
          Math.pow(Vstarr[iCS] - Vstark[iCS], 2) +
          Math.pow(Wstarr[iCS] - Wstark[iCS], 2)
      );
      R[iCS] = 100 - 4.6 * deltaE[iCS];
    }
  }
  var Ra = (R.R01 + R.R02 + R.R03 + R.R04 + R.R05 + R.R06 + R.R07 + R.R08) / 8;

  return Ra;
}

function GAIcalc(spd) {
  // Load values
  var deltaWavelength = createDelta(spd.wavelength);

  // Interpolate bar values
  var xbar = interp1(cie.wavelength, cie.xbar, spd.wavelength, 0);
  var ybar = interp1(cie.wavelength, cie.ybar, spd.wavelength, 0);
  var zbar = interp1(cie.wavelength, cie.zbar, spd.wavelength, 0);

  // Load TCS Color Standards
  var TCS_1 = {};
  for (var iCS in TCS.color_standards) {
    if (TCS.color_standards.hasOwnProperty(iCS)) {
      TCS_1[iCS] = interp1(
        TCS.wavelength,
        arrayScalar(TCS.color_standards[iCS], 1 / 1000),
        spd.wavelength,
        0
      );
    }
  }

  // Calculate u, v chromaticity coordinates of samples under test illuminant
  var xki = {};
  var yki = {};
  var uki = {};
  var vki = {};
  var ukiprime = {};
  var vkiprime = {};
  for (iCS in TCS_1) {
    if (TCS_1.hasOwnProperty(iCS)) {
      //test illuminant, uki, vki
      X = sumproduct(
        arrayMul(spd.value, TCS_1[iCS]),
        arrayMul(deltaWavelength, xbar)
      );
      Y = sumproduct(
        arrayMul(spd.value, TCS_1[iCS]),
        arrayMul(deltaWavelength, ybar)
      );
      Z = sumproduct(
        arrayMul(spd.value, TCS_1[iCS]),
        arrayMul(deltaWavelength, zbar)
      );
      xki[iCS] = X / (X + Y + Z);
      yki[iCS] = Y / (X + Y + Z);
      uki[iCS] = (4 * X) / (X + 15 * Y + 3 * Z);
      vki[iCS] = (6 * Y) / (X + 15 * Y + 3 * Z);
      ukiprime[iCS] = uki[iCS];
      vkiprime[iCS] = vki[iCS] * 1.5;
    }
  }

  // Select sources 1 - 8
  var iSource = 0;
  var ukprimeArray = [];
  var vkprimeArray = [];
  for (iCS in TCS_1) {
    if (TCS_1.hasOwnProperty(iCS)) {
      ukprimeArray[iSource] = ukiprime[iCS];
      vkprimeArray[iSource] = vkiprime[iCS];
      iSource = iSource + 1;
    }
  }
  ukprimeArrayS = ukprimeArray.slice(0, 8);
  vkprimeArrayS = vkprimeArray.slice(0, 8);

  // Calculate area with selected sources
  var ukprimeArraySR1 = ukprimeArrayS.slice(1, 8);
  ukprimeArraySR1.push(ukprimeArrayS[0]);
  var vkprimeArraySR1 = vkprimeArrayS.slice(1, 8);
  vkprimeArraySR1.push(vkprimeArrayS[0]);

  var area = Math.abs(
    arrayMul(
      arraySub(ukprimeArraySR1, ukprimeArrayS),
      arrayAdd(vkprimeArraySR1, vkprimeArrayS)
    ).sum() / 2
  );

  var gai = (area / 0.007354) * 100;

  return gai;
}

function chromaticityCoordinatesCalc(spd) {
  var result = {};

  // Interpolate bar values
  var xbar = interp1(cie.wavelength, cie.xbar, spd.wavelength, 0);
  var ybar = interp1(cie.wavelength, cie.ybar, spd.wavelength, 0);
  var zbar = interp1(cie.wavelength, cie.zbar, spd.wavelength, 0);

  var deltaWavelength = createDelta(spd.wavelength);
  var X = sumproduct(spd.value, arrayMul(deltaWavelength, xbar));
  var Y = sumproduct(spd.value, arrayMul(deltaWavelength, ybar));
  var Z = sumproduct(spd.value, arrayMul(deltaWavelength, zbar));

  result = {
    x: X / (X + Y + Z),
    y: Y / (X + Y + Z),
  };

  return result;
}

function EMLcalc(spd, thickness) {
  var cs;

  var wavelength = spd.wavelength;
  var value = spd.value;

  var efs = efficiencyFunctions(wavelength, thickness);
  var deltaWavelength = createDelta(wavelength);

  var spdMelanopsin = sumproduct(
    value,
    arrayMul(deltaWavelength, efs.CIE_Melanopsin)
  );

  var a1 = 1;
  var b1 = 0.0;

  cs = a1 * spdMelanopsin - b1;
  if (cs < 0) {
    cs = 0;
  }
  var eml = cs * 852;

  var scalar = 0.885;

  return eml * scalar;
}

function DuvCalc(spd) {
  // Interpolate bar values
  var xbar = interp1(cie.wavelength, cie.xbar, spd.wavelength, 0);
  var ybar = interp1(cie.wavelength, cie.ybar, spd.wavelength, 0);
  var zbar = interp1(cie.wavelength, cie.zbar, spd.wavelength, 0);

  // Calculate u, v chromaticity coordinates of samples
  //test illuminant, uk, vk
  var deltaWavelength = createDelta(spd.wavelength);
  var X = sumproduct(spd.value, arrayMul(deltaWavelength, xbar));
  var Y = sumproduct(spd.value, arrayMul(deltaWavelength, ybar));
  var Z = sumproduct(spd.value, arrayMul(deltaWavelength, zbar));
  var Yknormal = 100 / Y;
  var uk = (4 * X) / (X + 15 * Y + 3 * Z);
  var vk = (6 * Y) / (X + 15 * Y + 3 * Z);

  // Calculate Lfp
  var Lfp = Math.sqrt(Math.pow(uk - 0.292, 2) + Math.pow(vk - 0.24, 2));

  // Calculate Lbb
  var a = Math.acos((uk - 0.292) / Lfp);
  var k = [
    -0.471106, 1.925865, -2.4243787, 1.5317403, -0.5179722, 0.0893944,
    -0.00616793,
  ];
  var Lbb =
    k[6] * Math.pow(a, 6) +
    k[5] * Math.pow(a, 5) +
    k[4] * Math.pow(a, 4) +
    k[3] * Math.pow(a, 3) +
    k[2] * Math.pow(a, 2) +
    k[1] * Math.pow(a, 1) +
    k[0];

  // Calculate Duv
  var Duv = Lfp - Lbb;
  return Duv;
}

function claspd2lux(cla, spd, thickness) {
  //Define output
  var result;

  // Internal variables
  var csval = cla / 1547.9;

  // Parse and normalize SPD input
  var spd1wavelength = spd.wavelength;
  var spd1value = spdNormalize(spd1wavelength, spd.value);
  //var spd1value = spd.value;

  // Load efficiency functions and create the delta wavelength
  var efs = efficiencyFunctions(spd1wavelength, thickness);
  var deltaWavelength = createDelta(spd1wavelength);

  // Prep spd1efs
  var spd1Scone = sumproduct(spd1value, arrayMul(deltaWavelength, efs.Scone));
  var spd1Vlambda = sumproduct(
    spd1value,
    arrayMul(deltaWavelength, efs.Vlambda)
  );
  var spd1Melanopsin = sumproduct(
    spd1value,
    arrayMul(deltaWavelength, efs.Melanopsin)
  );
  var spd1Vprime = sumproduct(spd1value, arrayMul(deltaWavelength, efs.Vprime));

  // Prep rodSat
  var rodSat1 = 35000;
  var retinalE = [1, 3, 10, 30, 100, 300, 1000, 3000, 10000, 30000, 100000];
  var pupilDiam = [7.1, 7, 6.9, 6.8, 6.7, 6.5, 6.3, 5.65, 5, 3.65, 2.3];
  var diam = interp1(retinalE, pupilDiam, rodSat1, 0);
  var rodSat =
    ((rodSat1 / ((Math.pow(diam, 2) / 4) * Math.PI)) * Math.PI) / 1700;

  // Create spd1efs
  var spd1efs = {
    Scone: spd1Scone,
    Vlambda: spd1Vlambda,
    Melanopsin: spd1Melanopsin,
    Vprime: spd1Vprime,
    rodSat: rodSat,
  };

  // Constants
  var consts = {
    a1: 1,
    b1: 0.0,
    a2: 0.7,
    b2: 0.0,
    k: 0.2616,
    a3: 3.3,
  };

  // Test B-Y
  if (spd1efs.Scone - consts.k * spd1efs.Vlambda > 0) {
    var lux0 = 0;
    var luxTest = 50.33;
    var spd1 = {
      wavelength: spd1wavelength,
      value: spd1value,
    };

    var test = {
      spd: spd1,
      csval: csval,
      consts: consts,
      spd1efs: spd1efs,
    };
    // Calculate lux
    result = fmin(claspd2luxmin, test, lux0);
    //result = claspd2luxmin(test, luxTest);
  } else {
    result = csval / (consts.a1 * spd1efs.Melanopsin - consts.b1);
  }
  return result;
}

function claspd2luxmin(funcParams, lux) {
  // Unbox funcParams
  var spd = funcParams.spd;
  var csval = funcParams.csval;
  var consts = funcParams.consts;
  var spd1efs = funcParams.spd1efs;

  // Calculate cs
  var cs1 = consts.a1 * spd1efs.Melanopsin * lux - consts.b1;
  if (cs1 < 0) {
    cs1 = 0;
  }
  var cs2 =
    consts.a2 * (spd1efs.Scone * lux - consts.k * spd1efs.Vlambda * lux) -
    consts.b2;
  if (cs2 < 0) {
    cs2 = 0;
  }
  var rod =
    consts.a3 * (1 - Math.exp((-spd1efs.Vprime * lux) / spd1efs.rodSat));
  var cs = cs1 + cs2 - rod;
  if (cs < 0) {
    cs = 0;
  }

  // Set Result
  var result = Math.pow(csval - cs, 2);
  //var result = cs;
  return result;
}

function generateCircadianSpectralResponceForSPD(spd, thickness, rod) {
  /*
  		% Revised May 11, 2011
  		% Revised September 26, 2014:
  		%   Conforms to Corrigendum, Lighting Res. Technol. 2012; 44: 516
  		%   for the publication: Rea MS, Figueiro MG, Bierman A, Hamner R.
  		%   Modeling the spectral sensitivity of the human circadian system.
  		%   Lighting Research and Technology 2012; 44(4): 386–396.

  		% Calculates the circadian stimulus for the given spd
  		% spd is assumed to be in units of W/m^2
  		% CS is scaled to be equal to lux for illuminanct A (2856 K)
  		% spd is two column matrix with wavelength (nm) in the first column
  		% and spectral irradiance (W/(m^2 nm) in the second column
  		% OR spd is a column vector and start, end and increment wavelength values
  		% are specified as additional arguements (e.g. f(spd,400,700,10))
  	*/

  var resultObj = {};
  var cs;
  var specResp;
  var specRespMinusRod;

  var wavelength = spd.wavelength;
  var value = spd.value;

  var efs = efficiencyFunctions(wavelength, thickness);
  var deltaWavelength = createDelta(wavelength);

  var spdScone = sumproduct(value, arrayMul(deltaWavelength, efs.Scone));
  var spdVlambda = sumproduct(value, arrayMul(deltaWavelength, efs.Vlambda));
  var spdMelanopsin = sumproduct(
    value,
    arrayMul(deltaWavelength, efs.Melanopsin)
  );
  var spdVprime = sumproduct(value, arrayMul(deltaWavelength, efs.Vprime));

  var rodSat1 = 35000;
  var retinalE = [1, 3, 10, 30, 100, 300, 1000, 3000, 10000, 30000, 100000];
  var pupilDiam = [7.1, 7, 6.9, 6.8, 6.7, 6.5, 6.3, 5.65, 5, 3.65, 2.3];
  var diam = interp1(retinalE, pupilDiam, rodSat1, 0);
  var rodSat =
    ((rodSat1 / ((Math.pow(diam, 2) / 4) * Math.PI)) * Math.PI) / 1700;

  var a1 = 1;
  var b1 = 0.0;
  var a2 = 0.7;
  var b2 = 0.0;
  var k = 0.2616; //0.2883;//0.2616;
  var a3 = 3.3;
  var cool = false;

  if (spdScone - k * spdVlambda > 0) {
    var cs1 = a1 * spdMelanopsin - b1;
    if (cs1 < 0) {
      cs1 = 0;
    }
    var cs2 = a2 * (spdScone - k * spdVlambda) - b2;
    if (cs2 < 0) {
      cs2 = 0;
    }
    var Rod = a3 * (1 - Math.exp(-spdVprime / rodSat));
    cs = cs1 + cs2 - Rod;
    if (cs < 0) {
      cs = 0;
    }
    specResp = arrayAdd(
      arraySub2(arrayScalar(efs.Melanopsin, a1), b1),
      arrayScalar(
        arraySub2(arraySub2(efs.Scone, arrayScalar(efs.Vlambda, k)), b2),
        a2
      )
    ); //(a1*spdMelanopsin - b1) + a2*(spdScone - k*spdVprime - b2);
    specRespMinusRod = arraySub2(
      arrayAdd(
        arraySub2(arrayScalar(efs.Melanopsin, a1), b1),
        arraySub2(
          arraySub2(arrayScalar(efs.Scone, a2), arrayScalar(efs.Vlambda, k)),
          b2
        )
      ),
      arrayScalar(efs.Vprime, a3 * rod)
    ); //(a1*spdMelanopsin - b1) + (a2*spdScone - k*spdVlambda - b2) - a3*rod*spdVprime;
    cool = true;
  } else {
    cs = a1 * spdMelanopsin - b1;
    if (cs < 0) {
      cs = 0;
    }
    specResp = arraySub2(arrayScalar(efs.Melanopsin, a1), b1); //a1*spdMelanopsin - b1;
    specRespMinusRod = arraySub2(arrayScalar(efs.Melanopsin, a1), b1); //a1*spdMelanopsin - b1;
    cool = false;
  }
  var cla = cs * 1547.9;
  var responseDiff = Math.abs(
    cla -
      1547.9 * sumproduct(value, arrayMul(deltaWavelength, specRespMinusRod))
  );

  //return responseDiff;

  var result = {
    responseDiff: responseDiff,
    specRespMinusRod: specRespMinusRod,
    cla: cla,
    cool: cool,
  };

  return result;
}

function prepGenerateCircadianSpectralResponceForSPD(funcParams, rod) {
  var spd = funcParams.spd;
  var thickness = funcParams.thickness;

  var resultObj = generateCircadianSpectralResponceForSPD(spd, thickness, rod);
  return resultObj.responseDiff;
}

function efficiencyFunctions(wavelength, thickness) {
  var macularT = arrayPow(10, arrayScalar(Macula.value, -thickness));
  var macularTi = interp1(Macula.wavelength, macularT, wavelength, 1);

  var VprimeInt1 = interp1(Vprime.wavelength, Vprime.value, wavelength, 0);
  var VprimeInt = arrayNormalize(VprimeInt1);

  var MelanopsinInt1 = interp1(
    Melanopsin.wavelength,
    Melanopsin.value,
    wavelength,
    0
  );
  var MelanopsinInt = arrayNormalize(MelanopsinInt1);

  var CIE_MelanopsinInt1 = interp1(
    CIE_Melanopic.wavelength,
    CIE_Melanopic.value,
    wavelength,
    0
  );
  var CIE_MelanopsinInt = arrayNormalize(CIE_MelanopsinInt1);

  var SconeInt1 = interp1(Scone.wavelength, Scone.value, wavelength, 0);
  var SconeInt2 = arrayDiv(SconeInt1, macularTi);
  var SconeInt = arrayNormalize(SconeInt2);

  var VlambdaInt1 = interp1(Vlambda.wavelength, Vlambda.value, wavelength, 0);
  var VlambdaInt2 = arrayDiv(VlambdaInt1, macularTi);
  var VlambdaInt = arrayNormalize(VlambdaInt2);

  var PhotopicInt = arrayNormalize(VlambdaInt1);

  var CIE_S_cone_int1 = interp1(
    CIE_S_cone_opic.wavelength,
    CIE_S_cone_opic.value,
    wavelength,
    0
  );
  var CIE_S_cone_int = arrayNormalize(CIE_S_cone_int1);

  var CIE_M_cone_int1 = interp1(
    CIE_M_cone_opic.wavelength,
    CIE_M_cone_opic.value,
    wavelength,
    0
  );
  var CIE_M_cone_int = arrayNormalize(CIE_M_cone_int1);

  var CIE_L_cone_int1 = interp1(
    CIE_L_cone_opic.wavelength,
    CIE_L_cone_opic.value,
    wavelength,
    0
  );
  var CIE_L_cone_int = arrayNormalize(CIE_L_cone_int1);

  var CIE_Rhodopic_int1 = interp1(
    CIE_Rhodopic.wavelength,
    CIE_Rhodopic.value,
    wavelength,
    0
  );
  var CIE_Rhodopic_int = arrayNormalize(CIE_Rhodopic_int1);

  var CIE_Melanopic_int1 = interp1(
    CIE_Melanopic.wavelength,
    CIE_Melanopic.value,
    wavelength,
    0
  );
  var CIE_Melanopic_int = arrayNormalize(CIE_Melanopic_int1);

  return {
    Vlambda: VlambdaInt,
    Vprime: VprimeInt,
    Scone: SconeInt,
    CIE_Melanopsin: CIE_MelanopsinInt,
    Melanopsin: MelanopsinInt,
    Photopic: PhotopicInt,
    CIE_S_cone: CIE_S_cone_int,
    CIE_M_cone: CIE_M_cone_int,
    CIE_L_cone: CIE_L_cone_int,
    CIE_Rhodopic: CIE_Rhodopic_int,
    CIE_Melanopic: CIE_Melanopic_int,
  };
}

function ssAbsoluteSPDCalc() {
  var result = {
    absoluteIll: 0,
    absoluteSPD: {
      wavelength: setwavelength,
      value: arrayScalar(setwavelength, 0),
    },
  };
  for (var i = 0; i < sourcelist.length; i++) {
    if (sourcelist[i].isSelected) {
      result.absoluteIll =
        result.absoluteIll + sourcelist[i].selectedSource.illuminance;
      result.absoluteSPD.value = arrayAdd(
        result.absoluteSPD.value,
        sourcelist[i].selectedSource.absoluteSPD
      );
    }
  }
  return result;
}
